#if 0
;
; Buffer Definitions:
;
; cbuffer b1
; {
;
;   struct b1
;   {
;
;       struct struct.DynamicCB
;       {
;
;           row_major float4x4 cameraToWorld;         ; Offset:    0
;           float3 worldCameraPosition;               ; Offset:   64
;           uint padding;                             ; Offset:   76
;           float2 resolution;                        ; Offset:   80
;       
;       } g_dynamic                                   ; Offset:    0
;
;   
;   } b1                                              ; Offset:    0 Size:    88
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; b1                                cbuffer      NA          NA     CB0            cb1     1
; g_accel                           texture     i32         ras      T0             t0     1
; depth                             texture     f32          2d      T1            t12     1
; normals                           texture     f32          2d      T2            t13     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%b1 = type { %struct.DynamicCB }
%struct.DynamicCB = type { %class.matrix.float.4.4, <3 x float>, i32, <2 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%dx.types.Handle = type { i8* }
%struct.RayPayload = type { i32, float }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%struct.RayDesc = type { <3 x float>, float, <3 x float>, float }

@"\01?g_accel@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?depth@@3V?$Texture2D@M@@A" = external constant %"class.Texture2D<float>", align 4
@"\01?normals@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %"class.Texture2D<vector<float, 4> >", align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@b1 = external constant %b1

; Function Attrs: nounwind
define void @"\01?RayGen@@YAXXZ"() #0 {
  %1 = load %"class.Texture2D<vector<float, 4> >", %"class.Texture2D<vector<float, 4> >"* @"\01?normals@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %2 = load %"class.Texture2D<float>", %"class.Texture2D<float>"* @"\01?depth@@3V?$Texture2D@M@@A", align 4
  %3 = load %b1, %b1* @b1, align 4
  %b1 = call %dx.types.Handle @dx.op.createHandleForLib.b1(i32 160, %b1 %3)  ; CreateHandleForLib(Resource)
  %4 = alloca %struct.RayPayload, align 8
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex1 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %.i0 = uitofp i32 %DispatchRaysIndex to float
  %.i1 = uitofp i32 %DispatchRaysIndex1 to float
  %.i016 = fadd fast float %.i0, 5.000000e-01
  %.i117 = fadd fast float %.i1, 5.000000e-01
  %5 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %6 = extractvalue %dx.types.CBufRet.f32 %5, 0
  %7 = extractvalue %dx.types.CBufRet.f32 %5, 1
  %.i018 = fdiv fast float %.i016, %6
  %.i119 = fdiv fast float %.i117, %7
  %.i020 = fmul fast float %.i018, 2.000000e+00
  %.i121 = fmul fast float %.i119, 2.000000e+00
  %.i022 = fadd fast float %.i020, -1.000000e+00
  %.i123 = fadd fast float %.i121, -1.000000e+00
  %8 = fsub fast float -0.000000e+00, %.i123
  %9 = fptosi float %.i016 to i32
  %10 = fptosi float %.i117 to i32
  %11 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32 160, %"class.Texture2D<float>" %2)  ; CreateHandleForLib(Resource)
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %11, i32 0, i32 %9, i32 %10, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %12 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %13 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32 160, %"class.Texture2D<vector<float, 4> >" %1)  ; CreateHandleForLib(Resource)
  %TextureLoad3 = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %13, i32 0, i32 %9, i32 %10, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %14 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 0
  %15 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 1
  %16 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 2
  %17 = extractvalue %dx.types.ResRet.f32 %TextureLoad3, 3
  %18 = fcmp fast oeq float %17, 0.000000e+00
  br i1 %18, label %60, label %19

; <label>:19                                      ; preds = %0
  %20 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?g_accel@@3URaytracingAccelerationStructure@@A", align 4
  %21 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %22 = extractvalue %dx.types.CBufRet.f32 %21, 0
  %23 = extractvalue %dx.types.CBufRet.f32 %21, 1
  %24 = extractvalue %dx.types.CBufRet.f32 %21, 2
  %25 = extractvalue %dx.types.CBufRet.f32 %21, 3
  %26 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %27 = extractvalue %dx.types.CBufRet.f32 %26, 0
  %28 = extractvalue %dx.types.CBufRet.f32 %26, 1
  %29 = extractvalue %dx.types.CBufRet.f32 %26, 2
  %30 = extractvalue %dx.types.CBufRet.f32 %26, 3
  %31 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %32 = extractvalue %dx.types.CBufRet.f32 %31, 0
  %33 = extractvalue %dx.types.CBufRet.f32 %31, 1
  %34 = extractvalue %dx.types.CBufRet.f32 %31, 2
  %35 = extractvalue %dx.types.CBufRet.f32 %31, 3
  %36 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %37 = extractvalue %dx.types.CBufRet.f32 %36, 0
  %38 = extractvalue %dx.types.CBufRet.f32 %36, 1
  %39 = extractvalue %dx.types.CBufRet.f32 %36, 2
  %40 = extractvalue %dx.types.CBufRet.f32 %36, 3
  %41 = fmul fast float %22, %.i022
  %FMad15 = call float @dx.op.tertiary.f32(i32 46, float %23, float %8, float %41)  ; FMad(a,b,c)
  %FMad14 = call float @dx.op.tertiary.f32(i32 46, float %24, float %12, float %FMad15)  ; FMad(a,b,c)
  %42 = fadd fast float %FMad14, %25
  %43 = fmul fast float %27, %.i022
  %FMad12 = call float @dx.op.tertiary.f32(i32 46, float %28, float %8, float %43)  ; FMad(a,b,c)
  %FMad11 = call float @dx.op.tertiary.f32(i32 46, float %29, float %12, float %FMad12)  ; FMad(a,b,c)
  %44 = fadd fast float %FMad11, %30
  %45 = fmul fast float %32, %.i022
  %FMad9 = call float @dx.op.tertiary.f32(i32 46, float %33, float %8, float %45)  ; FMad(a,b,c)
  %FMad8 = call float @dx.op.tertiary.f32(i32 46, float %34, float %12, float %FMad9)  ; FMad(a,b,c)
  %46 = fadd fast float %FMad8, %35
  %47 = fmul fast float %37, %.i022
  %FMad6 = call float @dx.op.tertiary.f32(i32 46, float %38, float %8, float %47)  ; FMad(a,b,c)
  %FMad5 = call float @dx.op.tertiary.f32(i32 46, float %39, float %12, float %FMad6)  ; FMad(a,b,c)
  %48 = fadd fast float %FMad5, %40
  %.i024 = fdiv fast float %42, %48
  %.i125 = fdiv fast float %44, %48
  %.i2 = fdiv fast float %46, %48
  %49 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %50 = extractvalue %dx.types.CBufRet.f32 %49, 0
  %51 = extractvalue %dx.types.CBufRet.f32 %49, 1
  %52 = extractvalue %dx.types.CBufRet.f32 %49, 2
  %.i026 = fsub fast float %50, %.i024
  %.i127 = fsub fast float %51, %.i125
  %.i228 = fsub fast float %52, %.i2
  %53 = call float @dx.op.dot3.f32(i32 55, float %.i026, float %.i127, float %.i228, float %.i026, float %.i127, float %.i228)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt = call float @dx.op.unary.f32(i32 25, float %53)  ; Rsqrt(value)
  %.i029 = fmul fast float %.i026, %Rsqrt
  %.i130 = fmul fast float %.i127, %Rsqrt
  %.i231 = fmul fast float %.i228, %Rsqrt
  %.i032 = fsub fast float -0.000000e+00, %.i029
  %.i133 = fsub fast float -0.000000e+00, %.i130
  %.i234 = fsub fast float -0.000000e+00, %.i231
  %54 = call float @dx.op.dot3.f32(i32 55, float %.i032, float %.i133, float %.i234, float %14, float %15, float %16)  ; Dot3(ax,ay,az,bx,by,bz)
  %55 = fmul fast float %54, 2.000000e+00
  %.i038 = fmul fast float %55, %14
  %.i139 = fmul fast float %55, %15
  %.i240 = fmul fast float %55, %16
  %.i041 = fsub fast float %.i032, %.i038
  %.i142 = fsub fast float %.i133, %.i139
  %.i243 = fsub fast float %.i234, %.i240
  %56 = call float @dx.op.dot3.f32(i32 55, float %.i041, float %.i142, float %.i243, float %.i041, float %.i142, float %.i243)  ; Dot3(ax,ay,az,bx,by,bz)
  %Rsqrt4 = call float @dx.op.unary.f32(i32 25, float %56)  ; Rsqrt(value)
  %.i044 = fmul fast float %.i041, %Rsqrt4
  %.i145 = fmul fast float %.i142, %Rsqrt4
  %.i246 = fmul fast float %.i243, %Rsqrt4
  %.i047 = fmul fast float %.i029, 0x3FB99999A0000000
  %.i148 = fmul fast float %.i130, 0x3FB99999A0000000
  %.i249 = fmul fast float %.i231, 0x3FB99999A0000000
  %.i050 = fsub fast float %.i024, %.i047
  %.i151 = fsub fast float %.i125, %.i148
  %.i252 = fsub fast float %.i2, %.i249
  %57 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %4, i32 0, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %4, i32 0, i32 1
  store float 0x47EFFFFFE0000000, float* %58, align 4
  %59 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %20)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %59, i32 16, i32 -1, i32 0, i32 1, i32 0, float %.i050, float %.i151, float %.i252, float 0.000000e+00, float %.i044, float %.i145, float %.i246, float 0x47EFFFFFE0000000, %struct.RayPayload* nonnull %4)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  br label %60

; <label>:60                                      ; preds = %19, %0
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #2

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #3

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.b1(i32, %b1) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32, %"class.Texture2D<float>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<vector<float, 4> >"(i32, %"class.Texture2D<vector<float, 4> >") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!13, !40}
!dx.entryPoints = !{!44, !45}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, null, !11, null}
!5 = !{!6, !8, !10}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?g_accel@@3URaytracingAccelerationStructure@@A", !"g_accel", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{i32 1, %"class.Texture2D<float>"* @"\01?depth@@3V?$Texture2D@M@@A", !"depth", i32 0, i32 12, i32 1, i32 2, i32 0, !9}
!9 = !{i32 0, i32 9}
!10 = !{i32 2, %"class.Texture2D<vector<float, 4> >"* @"\01?normals@@3V?$Texture2D@V?$vector@M$03@@@@A", !"normals", i32 0, i32 13, i32 1, i32 2, i32 0, !9}
!11 = !{!12}
!12 = !{i32 0, %b1* @b1, !"b1", i32 0, i32 1, i32 1, i32 88, null}
!13 = !{i32 0, %struct.RaytracingAccelerationStructure undef, !14, %"class.RWTexture2D<vector<float, 4> >" undef, !16, %struct.DynamicCB undef, !18, %"class.Texture2D<float>" undef, !24, %"class.Texture2D<float>::mips_type" undef, !26, %"class.Texture2D<vector<float, 4> >" undef, !28, %"class.Texture2D<vector<float, 4> >::mips_type" undef, !26, %struct.RayDesc undef, !30, %struct.RayPayload undef, !35, %b1 undef, !38}
!14 = !{i32 4, !15}
!15 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!16 = !{i32 16, !17}
!17 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!18 = !{i32 88, !19, !21, !22, !23}
!19 = !{i32 6, !"cameraToWorld", i32 2, !20, i32 3, i32 0, i32 7, i32 9}
!20 = !{i32 4, i32 4, i32 1}
!21 = !{i32 6, !"worldCameraPosition", i32 3, i32 64, i32 7, i32 9}
!22 = !{i32 6, !"padding", i32 3, i32 76, i32 7, i32 5}
!23 = !{i32 6, !"resolution", i32 3, i32 80, i32 7, i32 9}
!24 = !{i32 8, !17, !25}
!25 = !{i32 6, !"mips", i32 3, i32 4}
!26 = !{i32 4, !27}
!27 = !{i32 6, !"handle", i32 3, i32 0, i32 7, i32 5}
!28 = !{i32 20, !17, !29}
!29 = !{i32 6, !"mips", i32 3, i32 16}
!30 = !{i32 32, !31, !32, !33, !34}
!31 = !{i32 6, !"Origin", i32 3, i32 0, i32 7, i32 9}
!32 = !{i32 6, !"TMin", i32 3, i32 12, i32 7, i32 9}
!33 = !{i32 6, !"Direction", i32 3, i32 16, i32 7, i32 9}
!34 = !{i32 6, !"TMax", i32 3, i32 28, i32 7, i32 9}
!35 = !{i32 8, !36, !37}
!36 = !{i32 6, !"SkipShading", i32 3, i32 0, i32 7, i32 1}
!37 = !{i32 6, !"RayHitT", i32 3, i32 4, i32 7, i32 9}
!38 = !{i32 88, !39}
!39 = !{i32 6, !"g_dynamic", i32 3, i32 0}
!40 = !{i32 1, void ()* @"\01?RayGen@@YAXXZ", !41}
!41 = !{!42}
!42 = !{i32 1, !43, !43}
!43 = !{}
!44 = !{null, !"", null, !4, null}
!45 = !{void ()* @"\01?RayGen@@YAXXZ", !"\01?RayGen@@YAXXZ", null, null, !46}
!46 = !{i32 8, i32 7, i32 5, !47}
!47 = !{i32 0}

#endif

const unsigned char g_pRayGenerationShaderSSRLib[] = {
  0x44, 0x58, 0x42, 0x43, 0xb9, 0x57, 0x4f, 0xea, 0xaf, 0x1e, 0x5a, 0xc9,
  0x10, 0xd4, 0x16, 0x2a, 0xaf, 0x8f, 0x2e, 0x5e, 0x01, 0x00, 0x00, 0x00,
  0x58, 0x12, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0x3c, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0xe4, 0x00, 0x00, 0x00, 0x20, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x00, 0x62, 0x31, 0x00, 0x67, 0x5f, 0x61, 0x63,
  0x63, 0x65, 0x6c, 0x00, 0x64, 0x65, 0x70, 0x74, 0x68, 0x00, 0x6e, 0x6f,
  0x72, 0x6d, 0x61, 0x6c, 0x73, 0x00, 0x01, 0x3f, 0x52, 0x61, 0x79, 0x47,
  0x65, 0x6e, 0x40, 0x40, 0x59, 0x41, 0x58, 0x58, 0x5a, 0x00, 0x52, 0x61,
  0x79, 0x47, 0x65, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x00, 0x00, 0x00, 0x63, 0x00, 0x07, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0xd0, 0x10, 0x00, 0x00, 0x63, 0x00, 0x06, 0x00,
  0x34, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xb8, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x2b, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x1b, 0xc0, 0x23, 0xf8,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x08, 0x72, 0x48, 0x87, 0x79, 0x08,
  0x07, 0x71, 0x60, 0x87, 0x72, 0x68, 0x03, 0x7a, 0x08, 0x87, 0x74, 0x60,
  0x87, 0x36, 0x18, 0x87, 0x70, 0x60, 0x07, 0x76, 0x98, 0x07, 0xc0, 0x1c,
  0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0x82, 0x1d, 0xca, 0x61, 0x1e,
  0xe6, 0xa1, 0x0d, 0xe0, 0x41, 0x1e, 0xca, 0x61, 0x1c, 0xd2, 0x61, 0x1e,
  0xca, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0x21, 0x1c, 0xc8, 0x01, 0x30,
  0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77, 0x68,
  0x03, 0x73, 0x90, 0x87, 0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78, 0x78,
  0x87, 0x74, 0x70, 0x07, 0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72, 0x60,
  0x87, 0x74, 0x68, 0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c,
  0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xd2, 0xc1, 0x1d, 0xcc, 0x61, 0x1e,
  0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01, 0x1d,
  0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77, 0x78,
  0x87, 0x36, 0x70, 0x87, 0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80,
  0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c,
  0xd8, 0x61, 0x1e, 0xca, 0x01, 0x18, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1e,
  0xca, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xda, 0x60, 0x1e,
  0xe8, 0x21, 0x1c, 0xc6, 0x61, 0x1d, 0x00, 0x62, 0x1e, 0xe8, 0x21, 0x1c,
  0xc6, 0x61, 0x1d, 0xda, 0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1, 0x1c,
  0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1, 0x1c,
  0x00, 0x38, 0x00, 0x88, 0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73, 0x28,
  0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40,
  0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xa2, 0x1e,
  0xe6, 0xa1, 0x1c, 0xda, 0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60,
  0x87, 0x79, 0x28, 0x07, 0x60, 0x83, 0x21, 0xfc, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x48, 0x40, 0xb5, 0xc1, 0x18, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00,
  0x24, 0x80, 0xda, 0x40, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0xd2,
  0x06, 0xa2, 0x80, 0x80, 0x33, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x31, 0x21, 0x28, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x97, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf0, 0xc1, 0x1c,
  0x01, 0x18, 0x9c, 0x19, 0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8,
  0x14, 0x01, 0x02, 0xd2, 0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13,
  0xe2, 0x34, 0xec, 0x14, 0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x0a,
  0x66, 0x00, 0x66, 0x0a, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87, 0x79,
  0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72,
  0x90, 0x03, 0x52, 0xe0, 0x03, 0x73, 0x60, 0x87, 0x77, 0x08, 0x07, 0x7a,
  0xf0, 0x03, 0x3d, 0xd0, 0x83, 0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f,
  0xa0, 0x87, 0x7c, 0x80, 0x87, 0x72, 0x40, 0x01, 0x30, 0x93, 0x35, 0x0e,
  0xec, 0x10, 0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f,
  0xf4, 0x50, 0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0e,
  0xec, 0xf0, 0x0e, 0xe1, 0x40, 0x0f, 0x7e, 0x80, 0x84, 0x81, 0xa0, 0x62,
  0x18, 0x81, 0x18, 0x66, 0x6a, 0x83, 0x71, 0x60, 0x87, 0x70, 0x98, 0x87,
  0x79, 0x70, 0x03, 0x5a, 0x28, 0x07, 0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87,
  0x72, 0x90, 0x03, 0x52, 0xe0, 0x03, 0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87,
  0x77, 0x90, 0x07, 0x3e, 0x30, 0x07, 0x76, 0x78, 0x87, 0x70, 0xa0, 0x07,
  0x36, 0x00, 0x03, 0x3a, 0xf0, 0x03, 0x30, 0xf0, 0x03, 0x3d, 0xd0, 0x83,
  0x76, 0x48, 0x07, 0x78, 0x98, 0x87, 0x5f, 0xa0, 0x87, 0x7c, 0x80, 0x87,
  0x72, 0x40, 0x01, 0x30, 0x93, 0x18, 0x8c, 0x03, 0x3b, 0x84, 0xc3, 0x3c,
  0xcc, 0x83, 0x1b, 0xd0, 0x42, 0x39, 0xe0, 0x03, 0x3d, 0xd4, 0x83, 0x3c,
  0x94, 0x83, 0x1c, 0x90, 0x02, 0x1f, 0xd8, 0x43, 0x39, 0x8c, 0x03, 0x3d,
  0xbc, 0x83, 0x3c, 0xf0, 0x81, 0x39, 0xb0, 0xc3, 0x3b, 0x84, 0x03, 0x3d,
  0xb0, 0x01, 0x18, 0xd0, 0x81, 0x1f, 0x80, 0x81, 0x1f, 0x20, 0xe1, 0x40,
  0x28, 0x19, 0x01, 0x28, 0xc1, 0x42, 0xcc, 0x1c, 0x01, 0x42, 0x8e, 0x19,
  0x80, 0xe6, 0x49, 0x00, 0x88, 0xa2, 0x24, 0x38, 0xce, 0x12, 0x16, 0x40,
  0x92, 0x7c, 0x06, 0x98, 0x22, 0xe4, 0xf2, 0x8b, 0xc5, 0x01, 0x26, 0x1f,
  0xf7, 0x71, 0x14, 0x4c, 0xc3, 0x08, 0xc3, 0x30, 0x8c, 0x20, 0x0c, 0x07,
  0x49, 0x53, 0x44, 0x09, 0x93, 0xdf, 0x61, 0x0d, 0xc0, 0x20, 0x02, 0xb7,
  0x21, 0x82, 0xaa, 0x00, 0xeb, 0x84, 0xa0, 0x46, 0xc1, 0x45, 0xd8, 0x51,
  0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c,
  0x7e, 0x71, 0xdb, 0x88, 0x18, 0x86, 0x61, 0xb8, 0x67, 0xb8, 0xfc, 0x09,
  0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x3c, 0x85, 0xd0,
  0x80, 0x0d, 0x20, 0xae, 0x0c, 0x00, 0xe0, 0x90, 0x77, 0xd3, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0xbf, 0x12, 0xd2, 0x4a, 0x4c, 0x7e, 0x71, 0xdb,
  0xa8, 0x18, 0x86, 0x61, 0x00, 0x8a, 0x02, 0x02, 0x1b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x14, 0x16, 0x64, 0x00, 0x86, 0x61, 0x18, 0x86, 0x81, 0xc6,
  0x32, 0x0c, 0xc0, 0x40, 0xe5, 0x45, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xaf,
  0x00, 0x96, 0x02, 0xd8, 0xe2, 0x00, 0x03, 0x12, 0x80, 0x81, 0xce, 0x12,
  0x2d, 0xc0, 0x06, 0x00, 0x00, 0x00, 0x0c, 0xc3, 0x30, 0x0c, 0xc3, 0x30,
  0xa0, 0x94, 0x96, 0x62, 0x00, 0x86, 0x61, 0xa0, 0xb5, 0x0c, 0x1b, 0x80,
  0x51, 0x5b, 0x86, 0x0d, 0x28, 0xe8, 0x2d, 0xc3, 0x06, 0x24, 0x14, 0x97,
  0x61, 0x03, 0x02, 0x9a, 0x07, 0x02, 0x66, 0x22, 0x83, 0x71, 0x60, 0x87,
  0x70, 0x98, 0x87, 0x79, 0x70, 0x03, 0x59, 0xb8, 0x05, 0x5a, 0x28, 0x07,
  0x7c, 0xa0, 0x87, 0x7a, 0x90, 0x87, 0x72, 0x90, 0x03, 0x52, 0xe0, 0x03,
  0x7b, 0x28, 0x87, 0x71, 0xa0, 0x87, 0x77, 0x90, 0x07, 0x3e, 0x30, 0x07,
  0x76, 0x78, 0x87, 0x70, 0xa0, 0x07, 0x36, 0x00, 0x03, 0x3a, 0xf0, 0x03,
  0x30, 0xf0, 0x03, 0x14, 0x1c, 0xe7, 0x48, 0x53, 0x44, 0x09, 0x93, 0xbf,
  0x02, 0x58, 0x47, 0x48, 0x02, 0x22, 0xaa, 0xa1, 0x1a, 0xe6, 0x08, 0x82,
  0x29, 0x00, 0x02, 0x68, 0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0,
  0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d,
  0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74,
  0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6,
  0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78,
  0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x3a, 0x0f, 0xa4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x86,
  0x01, 0x00, 0xb3, 0x0c, 0x00, 0x98, 0x69, 0x00, 0xc0, 0x8c, 0xc2, 0x1a,
  0x08, 0x88, 0x07, 0x00, 0x30, 0xe4, 0x61, 0x00, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xc3, 0x01, 0x01, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x03, 0x02, 0x60,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x18, 0x00,
  0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67,
  0x0c, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x53, 0x06, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x30, 0xe4, 0x49, 0x03, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x18, 0xf2, 0xac, 0x01, 0x10, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xda, 0x00, 0x08, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x6f, 0x00, 0x04,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x38,
  0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21,
  0xcf, 0x1c, 0x00, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x16, 0x08, 0x00, 0x16, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0xa0, 0x0c, 0x0a, 0xa1, 0x18, 0x46, 0x00, 0x0a, 0xa4, 0x30, 0x8a,
  0xa0, 0x24, 0x4a, 0xa3, 0x60, 0x03, 0xca, 0xa1, 0x00, 0x03, 0x0a, 0x33,
  0xa0, 0x14, 0x0a, 0x34, 0xa0, 0x20, 0x0a, 0xa5, 0x80, 0x0a, 0x87, 0x82,
  0x19, 0x00, 0x22, 0x66, 0x00, 0xa8, 0x98, 0x01, 0x20, 0x64, 0x06, 0x80,
  0x92, 0x19, 0x00, 0x8a, 0x46, 0x00, 0xe8, 0x9a, 0x01, 0x20, 0x6c, 0x06,
  0x80, 0xce, 0x19, 0x00, 0xb2, 0x67, 0x00, 0xe8, 0x9e, 0x01, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66,
  0x43, 0x10, 0x4c, 0x10, 0x80, 0x68, 0x82, 0x00, 0x48, 0x1b, 0x84, 0x81,
  0x98, 0x20, 0x00, 0xd3, 0x06, 0x61, 0x30, 0x38, 0xb0, 0xa5, 0x89, 0x4d,
  0x10, 0x00, 0x6a, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01, 0xa8, 0x26, 0x08,
  0x02, 0xc0, 0xe3, 0xec, 0x2b, 0x6c, 0x6c, 0xac, 0x8c, 0x6d, 0x82, 0x00,
  0x58, 0x1b, 0x84, 0xc5, 0xd8, 0x90, 0x2c, 0x4c, 0xb3, 0x2c, 0x83, 0xb3,
  0x3c, 0x13, 0x04, 0x23, 0x60, 0x41, 0x56, 0x06, 0x47, 0x87, 0x36, 0x41,
  0x00, 0xae, 0x09, 0x02, 0x80, 0x4d, 0x10, 0x80, 0x6c, 0x83, 0xb0, 0x54,
  0x1b, 0x92, 0x21, 0x92, 0x96, 0x69, 0xa0, 0x16, 0x6b, 0x82, 0xa0, 0x08,
  0x3c, 0xdc, 0xde, 0xe4, 0xda, 0xc2, 0xd8, 0xe6, 0x26, 0x08, 0x80, 0xb6,
  0x21, 0xa1, 0xb0, 0x6c, 0xd1, 0x06, 0x6a, 0xb1, 0x36, 0x0c, 0xd0, 0xb5,
  0x4d, 0x10, 0x32, 0x82, 0x82, 0x58, 0xcc, 0x04, 0x01, 0xd8, 0x36, 0x20,
  0x4b, 0xe7, 0x2d, 0xc3, 0xf0, 0x01, 0x1b, 0x02, 0x30, 0xd8, 0x40, 0x70,
  0x40, 0x18, 0x00, 0x13, 0x84, 0xa0, 0x0c, 0x18, 0xa0, 0x4d, 0x10, 0x00,
  0x6e, 0x83, 0x91, 0x90, 0x01, 0xb1, 0x94, 0x81, 0xb1, 0x41, 0x30, 0xcc,
  0x60, 0x82, 0x60, 0x07, 0x6e, 0xb0, 0xc1, 0x48, 0xc8, 0x80, 0x58, 0xca,
  0xa0, 0xda, 0x20, 0x38, 0x69, 0x30, 0x41, 0xb8, 0xd6, 0x80, 0xcd, 0x58,
  0x58, 0x5b, 0x99, 0x5c, 0x18, 0xd5, 0xdb, 0xd5, 0x9b, 0x1c, 0x1b, 0xd9,
  0x86, 0xc1, 0x30, 0x86, 0x0d, 0x48, 0xc2, 0x06, 0x54, 0x1b, 0x10, 0x4b,
  0x19, 0x54, 0x9c, 0xee, 0xde, 0xe4, 0xd8, 0xc8, 0x86, 0xc2, 0xda, 0xca,
  0xe4, 0xc2, 0xa0, 0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde, 0xdc, 0x26, 0x08,
  0x40, 0xb7, 0xc1, 0x48, 0xde, 0x80, 0x80, 0x83, 0x32, 0xa8, 0x78, 0xc0,
  0x85, 0x91, 0x91, 0xa5, 0xb9, 0x9d, 0x4d, 0x10, 0x00, 0x6f, 0x82, 0x00,
  0x7c, 0x1b, 0x8c, 0x44, 0x0e, 0x88, 0x39, 0x28, 0x03, 0x3a, 0xa0, 0x22,
  0x57, 0x36, 0xf7, 0xc6, 0x56, 0x47, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0x00,
  0xc0, 0x60, 0x83, 0x91, 0xd8, 0x01, 0x71, 0x07, 0x65, 0x50, 0x6d, 0x28,
  0x3e, 0x37, 0x88, 0x83, 0x3a, 0xc0, 0x83, 0x09, 0x42, 0x71, 0x06, 0x13,
  0x04, 0x20, 0x0c, 0x48, 0xb4, 0xa5, 0xc1, 0xcd, 0x6d, 0x20, 0x12, 0x3e,
  0x20, 0x8c, 0x0d, 0xc3, 0x1e, 0xa4, 0x41, 0x1f, 0x4c, 0x10, 0x08, 0x33,
  0xa0, 0x81, 0x16, 0xe6, 0x46, 0xc6, 0x56, 0xb6, 0xc1, 0x48, 0x40, 0x81,
  0x58, 0xca, 0x80, 0x0e, 0x36, 0x08, 0x46, 0x28, 0x4c, 0x10, 0x92, 0x34,
  0x98, 0x20, 0x00, 0x62, 0xb0, 0x81, 0x48, 0xf8, 0x80, 0x70, 0x36, 0x0c,
  0xa4, 0x90, 0x06, 0xa5, 0x30, 0x41, 0x40, 0xd0, 0x60, 0x82, 0x70, 0x07,
  0x6f, 0x30, 0x41, 0x00, 0xc6, 0x80, 0xc6, 0x93, 0x5c, 0xda, 0x59, 0x9a,
  0xdb, 0x06, 0x23, 0x51, 0x05, 0x62, 0x29, 0x83, 0x8a, 0x04, 0x55, 0x53,
  0x9a, 0xdb, 0x06, 0x23, 0x61, 0x05, 0x62, 0x2a, 0x83, 0x8a, 0x09, 0x51,
  0x9a, 0x5c, 0xd9, 0x18, 0x5d, 0xda, 0x9b, 0xdb, 0x06, 0x23, 0x71, 0x05,
  0xc2, 0x29, 0x83, 0x8a, 0x04, 0x55, 0x53, 0x18, 0xde, 0x04, 0x01, 0x20,
  0x83, 0x0d, 0x46, 0x02, 0x0b, 0x44, 0x2c, 0x94, 0x41, 0xb5, 0xa1, 0x48,
  0x85, 0x55, 0x68, 0x85, 0x57, 0x90, 0x85, 0x09, 0xc2, 0x19, 0xb4, 0x01,
  0x97, 0xa9, 0xb5, 0x34, 0xb8, 0x29, 0xb4, 0x30, 0xb2, 0x34, 0xb7, 0xb3,
  0x0d, 0x46, 0x52, 0x0b, 0xc4, 0x52, 0x06, 0x03, 0x0f, 0xa9, 0xb0, 0x3c,
  0xa4, 0x34, 0x3a, 0xaa, 0x0d, 0x46, 0x72, 0x0b, 0x84, 0x51, 0x06, 0xd5,
  0x86, 0x61, 0x0f, 0x6c, 0x01, 0x17, 0x26, 0x08, 0x18, 0x1b, 0x30, 0x39,
  0xfb, 0x22, 0xcb, 0x73, 0x0b, 0x6b, 0x4b, 0x1b, 0xdb, 0x40, 0x24, 0xbb,
  0x40, 0x2c, 0x1b, 0x84, 0x8f, 0x17, 0x36, 0x54, 0xcb, 0x18, 0x9c, 0x01,
  0x1a, 0xa8, 0xc1, 0x1a, 0xe4, 0x81, 0x1e, 0xf8, 0xc1, 0x1f, 0x88, 0xc2,
  0x28, 0x98, 0xc2, 0x29, 0x88, 0x02, 0x2a, 0xcc, 0x02, 0x2d, 0xe4, 0x82,
  0x2e, 0xf4, 0xc2, 0x04, 0xa1, 0x29, 0x36, 0x00, 0x1b, 0x86, 0x01, 0x1c,
  0xc0, 0x61, 0x43, 0x10, 0x0e, 0x1b, 0x86, 0xe1, 0x17, 0xc4, 0x81, 0xc0,
  0x86, 0x02, 0x20, 0x07, 0x40, 0x0c, 0x00, 0x3e, 0x01, 0x3f, 0x52, 0x61,
  0x79, 0x47, 0x65, 0x6e, 0x40, 0x40, 0x59, 0x41, 0x58, 0x58, 0x5a, 0x1b,
  0x82, 0x65, 0x03, 0xb1, 0x07, 0x65, 0x40, 0x07, 0xe7, 0xb0, 0xa1, 0xf8,
  0x05, 0x73, 0x00, 0x00, 0x74, 0xa8, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92,
  0x46, 0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8,
  0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78,
  0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19,
  0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19,
  0xdb, 0x94, 0x20, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56,
  0x27, 0x37, 0x56, 0x36, 0x37, 0x25, 0x08, 0x83, 0x4a, 0x64, 0x78, 0x2e,
  0x74, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
  0x6f, 0x6e, 0x73, 0x53, 0x84, 0x5e, 0x10, 0x87, 0x3a, 0x64, 0x78, 0x2e,
  0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53,
  0x04, 0x72, 0x40, 0x07, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x74, 0x60, 0x07,
  0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8, 0x07, 0x79, 0x18, 0x87,
  0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90, 0x87, 0x74, 0x10, 0x87,
  0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x71, 0x00, 0x00, 0x00, 0xe5, 0xf0, 0x06, 0x64, 0xbc, 0xeb, 0x0d, 0x77,
  0x8d, 0xe5, 0xe5, 0x30, 0xbd, 0x8c, 0x0c, 0xbb, 0xc9, 0xec, 0xb2, 0xf1,
  0x2d, 0x67, 0xa6, 0xc5, 0xae, 0x31, 0x3b, 0x3c, 0x9f, 0xbb, 0xa8, 0x65,
  0x3c, 0xbd, 0x2e, 0x2f, 0xcb, 0x88, 0x3c, 0x33, 0xfb, 0x1d, 0xa6, 0xfb,
  0xcc, 0x60, 0x1b, 0x2e, 0xdf, 0x79, 0x7c, 0x21, 0xa0, 0x8a, 0x82, 0x88,
  0x4a, 0x07, 0x18, 0x4a, 0xc2, 0x00, 0x04, 0xcc, 0x2f, 0x6e, 0xdb, 0x18,
  0xa4, 0xe1, 0xf2, 0x9d, 0xc7, 0x9f, 0x88, 0x68, 0x42, 0x80, 0x08, 0xf3,
  0x8b, 0xdb, 0xb6, 0x81, 0x68, 0x59, 0x2a, 0xc6, 0x37, 0x16, 0x27, 0x00,
  0x96, 0x5f, 0x98, 0x9c, 0x48, 0x32, 0x88, 0x3f, 0x18, 0x2e, 0xdf, 0x79,
  0x7c, 0x21, 0x22, 0x80, 0x89, 0x08, 0x81, 0x66, 0x58, 0x88, 0xcf, 0x89,
  0x4a, 0x24, 0xf0, 0xa5, 0x29, 0xa2, 0x84, 0xc9, 0x5f, 0x01, 0x6c, 0x8a,
  0x00, 0x01, 0x69, 0x0c, 0x4d, 0x10, 0x88, 0x85, 0x88, 0x80, 0x09, 0x71,
  0x1a, 0x76, 0x8a, 0x28, 0x61, 0xa2, 0x22, 0xa2, 0x02, 0xb6, 0xc0, 0x8f,
  0x5c, 0x86, 0xd3, 0xd1, 0x40, 0xe0, 0xcc, 0xfa, 0x23, 0x51, 0xcb, 0x78,
  0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0x4d, 0x20, 0x30, 0x68, 0x0d, 0xdb,
  0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0x7c, 0x4e, 0x54, 0x22, 0x81, 0x1f, 0xd4, 0x46, 0x20, 0x04, 0xb5,
  0x21, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd7, 0x44, 0x45, 0x44,
  0xe9, 0x00, 0x83, 0x5f, 0xdc, 0xb6, 0x2d, 0x80, 0xc1, 0x70, 0xf9, 0xce,
  0xe3, 0x4f, 0x11, 0x20, 0x10, 0x2b, 0x80, 0xf9, 0xd2, 0x14, 0x51, 0xc2,
  0xe4, 0xaf, 0x00, 0x96, 0x02, 0xd8, 0xe2, 0x00, 0x43, 0x15, 0x3c, 0x81,
  0x9f, 0x34, 0x9c, 0x3f, 0x96, 0xdd, 0x40, 0x60, 0x36, 0x88, 0xc5, 0x6a,
  0xeb, 0x61, 0x0f, 0xc8, 0x78, 0xd7, 0x1b, 0xee, 0x1a, 0xcb, 0xcb, 0x61,
  0x7a, 0x19, 0x19, 0x76, 0x93, 0xd9, 0x65, 0xe3, 0x5b, 0xce, 0x4c, 0x8b,
  0x5d, 0x63, 0x76, 0x78, 0x3e, 0x77, 0x51, 0xcb, 0x78, 0x7a, 0x5d, 0x5e,
  0x96, 0x11, 0x79, 0xf6, 0xf2, 0x98, 0xfe, 0x96, 0xf3, 0xcc, 0xec, 0x77,
  0x98, 0xce, 0x02, 0xd1, 0x7c, 0x20, 0x9f, 0x25, 0x38, 0xc3, 0xe5, 0x3b,
  0x8f, 0x3f, 0x38, 0xd3, 0xed, 0x17, 0xb7, 0x5d, 0x02, 0x6c, 0x10, 0xf8,
  0xb9, 0xdf, 0xf2, 0x76, 0x98, 0x3d, 0x07, 0x02, 0x67, 0xd6, 0x1f, 0x89,
  0x5a, 0xc6, 0xd3, 0xeb, 0xf2, 0xb2, 0x8c, 0x08, 0xb4, 0xfe, 0x48, 0xf6,
  0xf2, 0x98, 0xfe, 0x96, 0x03, 0x9b, 0x24, 0xd8, 0x0c, 0x08, 0x04, 0x02,
  0x83, 0x05, 0xf0, 0x06, 0x81, 0xdf, 0xf9, 0x1b, 0x1e, 0x8f, 0xcb, 0x6c,
  0x20, 0x70, 0x56, 0x95, 0x86, 0xf3, 0x74, 0x79, 0x78, 0x9c, 0x76, 0x9f,
  0x83, 0xe3, 0x71, 0x99, 0x5d, 0x96, 0x87, 0xe9, 0xe9, 0xb7, 0x7b, 0x4a,
  0x97, 0xd7, 0xc7, 0xf4, 0xba, 0xbc, 0x0c, 0x04, 0x06, 0xed, 0x60, 0x1b,
  0x2e, 0xdf, 0x79, 0xfc, 0x01, 0x91, 0x1e, 0x60, 0x12, 0x8e, 0x15, 0xc0,
  0x24, 0xb1, 0x19, 0x88, 0xcb, 0x47, 0x6e, 0xdb, 0x14, 0x9e, 0xe1, 0xf2,
  0x9d, 0xc7, 0xa7, 0x1a, 0x20, 0xc2, 0xfc, 0xe2, 0xb6, 0x01, 0x00, 0x00,
  0x61, 0x20, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c,
  0x10, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x04, 0xcc, 0x00, 0x14,
  0x57, 0xd9, 0x15, 0xb0, 0x40, 0xb9, 0x95, 0xa8, 0x40, 0x11, 0x06, 0x94,
  0x4c, 0xe9, 0x0a, 0xd4, 0x00, 0x39, 0x25, 0x30, 0x02, 0x40, 0xc3, 0x18,
  0x41, 0x6b, 0xce, 0x39, 0xef, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xc2, 0xdf,
  0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x0b, 0x23, 0x00, 0x63, 0x04, 0xff,
  0xff, 0xff, 0xf7, 0x1f, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30,
  0x46, 0x00, 0x82, 0x20, 0x08, 0x82, 0x02, 0x00, 0x14, 0x0a, 0xc9, 0xa0,
  0x51, 0x28, 0x06, 0x85, 0x02, 0x36, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1,
  0xa0, 0x0d, 0xf2, 0x60, 0x0a, 0x66, 0x22, 0xce, 0x00, 0x88, 0x48, 0x61,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xbc, 0x50, 0x98, 0x9a, 0x11, 0x03,
  0x03, 0x00, 0x41, 0x30, 0xf0, 0x44, 0x81, 0x7a, 0x4e, 0x18, 0xea, 0x84,
  0xa1, 0x4c, 0x78, 0xe0, 0x63, 0x02, 0x04, 0x9f, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xe0, 0x50, 0x81, 0x43, 0xde, 0x60, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0xc0, 0x0a, 0x81, 0x3e, 0x56, 0x08, 0xf4, 0x31, 0x41, 0x92,
  0x8f, 0x09, 0x93, 0x7c, 0x4c, 0xb8, 0xe0, 0x63, 0x02, 0x06, 0x1f, 0xab,
  0x82, 0xf8, 0x1c, 0x03, 0xd0, 0x31, 0x00, 0x8d, 0x18, 0x18, 0x00, 0x08,
  0x82, 0xc1, 0x1b, 0xb0, 0xc2, 0x19, 0x58, 0x23, 0x06, 0x0d, 0x00, 0x82,
  0x60, 0x10, 0x06, 0xb3, 0x50, 0x06, 0x81, 0x29, 0x0c, 0xc2, 0x1a, 0xac,
  0xc1, 0x1a, 0xac, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x41, 0x1c, 0xb8, 0x82, 0x1a, 0x68, 0x23, 0x06, 0x0d, 0x00, 0x82,
  0x60, 0x10, 0x06, 0xb6, 0x80, 0x06, 0x41, 0x2a, 0x18, 0x85, 0x1b, 0xb8,
  0x81, 0x1b, 0xb8, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x70, 0x44, 0x40, 0x06, 0xc1, 0x37,
  0xcb, 0x20, 0x04, 0x01, 0x91, 0x43, 0x30, 0x46, 0x0c, 0x0e, 0x00, 0x04,
  0xc1, 0x80, 0xfb, 0x85, 0x39, 0xf8, 0x60, 0x61, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xe0,
  0x00, 0x40, 0x10, 0x0c, 0x38, 0x72, 0xc0, 0x03, 0x32, 0xc8, 0x85, 0xd1,
  0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20,
  0x86, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xe0, 0xd2, 0xa1, 0x0f, 0xd2,
  0xe0, 0x16, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06,
  0x61, 0x34, 0x81, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x80, 0x73,
  0x07, 0x51, 0x70, 0x03, 0x71, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21,
  0x18, 0x4d, 0x18, 0x84, 0xd1, 0x04, 0x62, 0xb0, 0x89, 0x0c, 0xe4, 0x33,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x6b, 0xe0, 0x0e, 0xa9, 0x30, 0x8d,
  0x41, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x6b, 0xf0, 0x0e, 0xaa,
  0x30, 0x7d, 0x81, 0x05, 0x13, 0x74, 0x4c, 0x42, 0x03, 0xf9, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0xc1, 0x1a, 0xc8, 0x43, 0x2b, 0x48, 0x67, 0x10,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x1a, 0xcc, 0x83, 0x2b, 0x48,
  0x63, 0x10, 0x58, 0x20, 0x41, 0xc7, 0x22, 0x36, 0x90, 0xcf, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0xac, 0x81, 0x3d, 0xc4, 0x42, 0xb4, 0x06, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0xac, 0xc1, 0x3d, 0xc8, 0x42, 0x74,
  0x06, 0x81, 0x05, 0x11, 0x74, 0x0c, 0x82, 0x03, 0xf9, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0xc1, 0x1a, 0xe8, 0x43, 0x2d, 0x40, 0x6f, 0x10, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0xc1, 0x1a, 0xec, 0x83, 0x2d, 0x40, 0x6b,
  0x10, 0x58, 0x00, 0x41, 0xc7, 0x9a, 0x80, 0x3e, 0xa6, 0x08, 0xf4, 0xb1,
  0x63, 0xa0, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x70, 0x26, 0xa1,
  0x0b, 0xa6, 0x90, 0x0f, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x60, 0xc3, 0x11, 0x1f, 0x1b, 0x8e, 0xf8, 0xd8, 0x70, 0xc4,
  0x67, 0xc4, 0x60, 0x01, 0x40, 0x10, 0x0c, 0xc6, 0x40, 0x25, 0x7e, 0x61,
  0x10, 0x82, 0x41, 0x08, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x0c,
  0x54, 0xa2, 0x17, 0x02, 0x2b, 0x02, 0xf9, 0x58, 0x21, 0xc8, 0xc7, 0x8a,
  0x41, 0x3e, 0x66, 0x0b, 0x43, 0x7c, 0xec, 0x16, 0x86, 0xf8, 0x18, 0x2e,
  0x0c, 0xf1, 0x19, 0x31, 0x58, 0x00, 0x10, 0x04, 0x83, 0x31, 0x90, 0x89,
  0x73, 0x18, 0x84, 0x80, 0x0f, 0xf6, 0x40, 0x0f, 0x2c, 0xd8, 0x05, 0xf9,
  0x58, 0xe0, 0x07, 0xf2, 0x31, 0xc1, 0x0f, 0xe4, 0x63, 0x83, 0x1f, 0xc8,
  0xc7, 0x90, 0x21, 0x3e, 0x86, 0x0c, 0xf1, 0x31, 0x64, 0x88, 0xcf, 0x88,
  0xc1, 0x02, 0x80, 0x20, 0x18, 0x8c, 0x81, 0x4e, 0xbc, 0xc3, 0x20, 0x04,
  0x83, 0x10, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x19, 0xe8, 0x44,
  0x3b, 0x04, 0x56, 0x04, 0xf2, 0xb1, 0x42, 0x90, 0x8f, 0x15, 0x83, 0x7c,
  0x6c, 0x62, 0x07, 0xf9, 0xd8, 0xd4, 0x0e, 0xf2, 0xb1, 0xc9, 0x1d, 0xe4,
  0x63, 0x62, 0x30, 0xc4, 0xc7, 0xc4, 0x60, 0x88, 0x8f, 0x89, 0xc1, 0x10,
  0x9f, 0x7d, 0x0e, 0xe7, 0x90, 0x13, 0x39, 0x31, 0x6c, 0x40, 0x04, 0x3a,
  0x41, 0x00, 0xfb, 0x1c, 0xd0, 0x41, 0x27, 0x7c, 0x62, 0xd8, 0x80, 0x08,
  0xe0, 0x61, 0x00, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x60, 0x0e, 0xc0,
  0xa2, 0x1f, 0x58, 0x61, 0xc4, 0x80, 0x2a, 0x40, 0x10, 0x0c, 0xd2, 0xc0,
  0x2c, 0xf2, 0x21, 0xd8, 0x09, 0x7c, 0xe0, 0x09, 0xb0, 0xe0, 0x09, 0xa3,
  0x20, 0xe4, 0x81, 0x59, 0x94, 0x78, 0x50, 0x87, 0x59, 0x02, 0x01, 0xc3,
  0x81, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x86, 0x14, 0x75, 0x88,
  0xf4, 0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x89, 0xcd, 0x40, 0x5c, 0x46,
  0x55, 0xf8, 0x48, 0x6d, 0xd7, 0x66, 0x55, 0xf8, 0x48, 0x6d, 0xdf, 0xf6,
  0x19, 0x50, 0xf8, 0x88, 0x8d, 0xd3, 0xa6, 0x18, 0x50, 0xf8, 0x48, 0x6d,
  0xe7, 0x26, 0x1a, 0x50, 0xf8, 0x88, 0x8d, 0xdf, 0x16, 0x19, 0x50, 0xf8,
  0x48, 0x6d, 0xef, 0x06, 0x1a, 0x50, 0xf8, 0x08, 0x8d, 0xd7, 0x76, 0x1a,
  0x50, 0xf8, 0x88, 0x8d, 0xeb, 0x56, 0x1a, 0x50, 0xf8, 0x08, 0x8d, 0xe3,
  0xa6, 0x1a, 0x50, 0xf8, 0x88, 0x8d, 0xf7, 0x96, 0x24, 0x75, 0x88, 0xf4,
  0x00, 0x93, 0x70, 0xac, 0x00, 0x26, 0x89, 0xcd, 0x40, 0x5c, 0xb5, 0xa1,
  0x06, 0x14, 0x3e, 0x42, 0xe3, 0xbb, 0x59, 0x06, 0x14, 0x3e, 0x52, 0xdf,
  0xb4, 0xad, 0x06, 0x14, 0x3e, 0x42, 0xe7, 0xb4, 0x1d, 0x06, 0x14, 0x9f,
  0x09, 0x0c, 0xb9, 0x19, 0x06, 0x14, 0x9f, 0x09, 0x0c, 0xba, 0x31, 0x15,
  0x3e, 0x42, 0xd7, 0xba, 0x0d, 0x06, 0x14, 0x9f, 0x09, 0x0c, 0xbc, 0x09,
  0x06, 0x14, 0x9f, 0x09, 0x0c, 0xbd, 0x45, 0x15, 0x3e, 0x42, 0xd7, 0xbc,
  0x79, 0x06, 0x14, 0x3e, 0x52, 0xdf, 0xbd, 0xb5, 0x06, 0x14, 0x3e, 0x62,
  0xe7, 0xb6, 0x65, 0x06, 0x14, 0x3e, 0x52, 0xdf, 0xb7, 0x51, 0x06, 0x14,
  0xab, 0x04, 0x45, 0x93, 0x79, 0x31, 0x2d, 0x71, 0x4d, 0x54, 0x44, 0x94,
  0x0e, 0x30, 0xdc, 0x36, 0x55, 0xf8, 0x08, 0x6d, 0xd3, 0x56, 0x55, 0xf8,
  0x08, 0x6d, 0xdb, 0x96, 0x18, 0x50, 0xf8, 0x08, 0x6d, 0xe3, 0x16, 0x1a,
  0x50, 0xf8, 0x48, 0x8d, 0xdb, 0x06, 0x19, 0x50, 0xf8, 0x08, 0x6d, 0xeb,
  0x66, 0x1a, 0x50, 0xf8, 0x48, 0x8d, 0xe7, 0x56, 0x19, 0x50, 0xf8, 0x08,
  0x6d, 0xf7, 0x66, 0x24, 0x04, 0xb5, 0x49, 0x06, 0x14, 0x3e, 0x62, 0xdb,
  0xbc, 0xa5, 0x06, 0x14, 0x3e, 0x52, 0xe3, 0xbc, 0x29, 0x0d, 0x3e, 0x42,
  0xdb, 0xd2, 0xe0, 0x23, 0xb5, 0x2d, 0x06, 0x0c, 0x3e, 0x62, 0x1b, 0x66,
  0x40, 0xe1, 0x23, 0xf4, 0x6d, 0xdb, 0x65, 0x40, 0xe1, 0x23, 0xf6, 0x5d,
  0x1b, 0x6b, 0x40, 0xe1, 0x23, 0x75, 0x5e, 0x1b, 0x69, 0x80, 0xb1, 0x4a,
  0x50, 0x34, 0xe1, 0xb6, 0xb5, 0xb4, 0xc4, 0x35, 0x51, 0x11, 0x51, 0x3a,
  0xc0, 0x60, 0x52, 0x85, 0x8f, 0xd4, 0x75, 0x6f, 0x9d, 0x01, 0x85, 0x8f,
  0xd0, 0x37, 0x6f, 0x4d, 0x85, 0x8f, 0xd4, 0xf5, 0x6e, 0x7f, 0xc6, 0x67,
  0x02, 0x43, 0x5d, 0x9b, 0x9f, 0xf1, 0x99, 0xc0, 0x50, 0xdb, 0xb6, 0x67,
  0x7c, 0x26, 0x30, 0xd4, 0xb8, 0xe9, 0x19, 0x9f, 0x09, 0x0c, 0x75, 0x6e,
  0x9a, 0x01, 0x85, 0x8f, 0xd8, 0x37, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};
