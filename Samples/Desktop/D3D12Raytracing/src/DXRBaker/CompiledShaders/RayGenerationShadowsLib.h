#if 0
;
; Note: shader requires additional functionality:
;       UAVs at every shader stage
;
;
; Buffer Definitions:
;
; cbuffer HitShaderConstants
; {
;
;   struct HitShaderConstants
;   {
;
;       float3 SunDirection;                          ; Offset:    0
;       float3 SunColor;                              ; Offset:   16
;       float3 AmbientColor;                          ; Offset:   32
;       float4 ShadowTexelSize;                       ; Offset:   48
;       row_major float4x4 ModelToShadow;             ; Offset:   64
;       uint IsReflection;                            ; Offset:  128
;       uint UseShadowRays;                           ; Offset:  132
;   
;   } HitShaderConstants                              ; Offset:    0 Size:   136
;
; }
;
; cbuffer b1
; {
;
;   struct b1
;   {
;
;       struct struct.DynamicCB
;       {
;
;           row_major float4x4 cameraToWorld;         ; Offset:    0
;           float3 worldCameraPosition;               ; Offset:   64
;           uint padding;                             ; Offset:   76
;           float2 resolution;                        ; Offset:   80
;       
;       } g_dynamic                                   ; Offset:    0
;
;   
;   } b1                                              ; Offset:    0 Size:    88
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; HitShaderConstants                cbuffer      NA          NA     CB0            cb0     1
; b1                                cbuffer      NA          NA     CB1            cb1     1
; g_accel                           texture     i32         ras      T0             t0     1
; depth                             texture     f32          2d      T1            t12     1
; g_screenOutput                        UAV     f32          2d      U0             u2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%struct.RaytracingAccelerationStructure = type { i32 }
%"class.RWTexture2D<vector<float, 4> >" = type { <4 x float> }
%"class.Texture2D<float>" = type { float, %"class.Texture2D<float>::mips_type" }
%"class.Texture2D<float>::mips_type" = type { i32 }
%HitShaderConstants = type { <3 x float>, <3 x float>, <3 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32 }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%b1 = type { %struct.DynamicCB }
%struct.DynamicCB = type { %class.matrix.float.4.4, <3 x float>, i32, <2 x float> }
%dx.types.Handle = type { i8* }
%struct.RayPayload = type { i32, float }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%struct.RayDesc = type { <3 x float>, float, <3 x float>, float }

@"\01?g_accel@@3URaytracingAccelerationStructure@@A" = external constant %struct.RaytracingAccelerationStructure, align 4
@"\01?g_screenOutput@@3V?$RWTexture2D@V?$vector@M$03@@@@A" = external constant %"class.RWTexture2D<vector<float, 4> >", align 4
@"\01?depth@@3V?$Texture2D@M@@A" = external constant %"class.Texture2D<float>", align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@HitShaderConstants = external constant %HitShaderConstants
@b1 = external constant %b1

; Function Attrs: nounwind
define void @"\01?RayGen@@YAXXZ"() #0 {
  %1 = load %"class.Texture2D<float>", %"class.Texture2D<float>"* @"\01?depth@@3V?$Texture2D@M@@A", align 4
  %2 = load %struct.RaytracingAccelerationStructure, %struct.RaytracingAccelerationStructure* @"\01?g_accel@@3URaytracingAccelerationStructure@@A", align 4
  %3 = load %"class.RWTexture2D<vector<float, 4> >", %"class.RWTexture2D<vector<float, 4> >"* @"\01?g_screenOutput@@3V?$RWTexture2D@V?$vector@M$03@@@@A", align 4
  %4 = load %b1, %b1* @b1, align 4
  %5 = load %HitShaderConstants, %HitShaderConstants* @HitShaderConstants, align 4
  %b1 = call %dx.types.Handle @dx.op.createHandleForLib.b1(i32 160, %b1 %4)  ; CreateHandleForLib(Resource)
  %HitShaderConstants = call %dx.types.Handle @dx.op.createHandleForLib.HitShaderConstants(i32 160, %HitShaderConstants %5)  ; CreateHandleForLib(Resource)
  %6 = alloca %struct.RayPayload, align 8
  %DispatchRaysIndex = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 0)  ; DispatchRaysIndex(col)
  %DispatchRaysIndex1 = call i32 @dx.op.dispatchRaysIndex.i32(i32 145, i8 1)  ; DispatchRaysIndex(col)
  %.i0 = uitofp i32 %DispatchRaysIndex to float
  %.i1 = uitofp i32 %DispatchRaysIndex1 to float
  %.i020 = fadd fast float %.i0, 5.000000e-01
  %.i121 = fadd fast float %.i1, 5.000000e-01
  %7 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %8 = extractvalue %dx.types.CBufRet.f32 %7, 0
  %9 = extractvalue %dx.types.CBufRet.f32 %7, 1
  %.i022 = fdiv fast float %.i020, %8
  %.i123 = fdiv fast float %.i121, %9
  %.i024 = fmul fast float %.i022, 2.000000e+00
  %.i125 = fmul fast float %.i123, 2.000000e+00
  %.i026 = fadd fast float %.i024, -1.000000e+00
  %.i127 = fadd fast float %.i125, -1.000000e+00
  %10 = fsub fast float -0.000000e+00, %.i127
  %11 = fptosi float %.i020 to i32
  %12 = fptosi float %.i121 to i32
  %13 = call %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32 160, %"class.Texture2D<float>" %1)  ; CreateHandleForLib(Resource)
  %TextureLoad = call %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32 66, %dx.types.Handle %13, i32 0, i32 %11, i32 %12, i32 undef, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %14 = extractvalue %dx.types.ResRet.f32 %TextureLoad, 0
  %15 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %16 = extractvalue %dx.types.CBufRet.f32 %15, 0
  %17 = extractvalue %dx.types.CBufRet.f32 %15, 1
  %18 = extractvalue %dx.types.CBufRet.f32 %15, 2
  %19 = extractvalue %dx.types.CBufRet.f32 %15, 3
  %20 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %21 = extractvalue %dx.types.CBufRet.f32 %20, 0
  %22 = extractvalue %dx.types.CBufRet.f32 %20, 1
  %23 = extractvalue %dx.types.CBufRet.f32 %20, 2
  %24 = extractvalue %dx.types.CBufRet.f32 %20, 3
  %25 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %26 = extractvalue %dx.types.CBufRet.f32 %25, 0
  %27 = extractvalue %dx.types.CBufRet.f32 %25, 1
  %28 = extractvalue %dx.types.CBufRet.f32 %25, 2
  %29 = extractvalue %dx.types.CBufRet.f32 %25, 3
  %30 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %b1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.f32 %30, 0
  %32 = extractvalue %dx.types.CBufRet.f32 %30, 1
  %33 = extractvalue %dx.types.CBufRet.f32 %30, 2
  %34 = extractvalue %dx.types.CBufRet.f32 %30, 3
  %35 = fmul fast float %16, %.i026
  %FMad19 = call float @dx.op.tertiary.f32(i32 46, float %17, float %10, float %35)  ; FMad(a,b,c)
  %FMad18 = call float @dx.op.tertiary.f32(i32 46, float %18, float %14, float %FMad19)  ; FMad(a,b,c)
  %36 = fadd fast float %FMad18, %19
  %37 = fmul fast float %21, %.i026
  %FMad16 = call float @dx.op.tertiary.f32(i32 46, float %22, float %10, float %37)  ; FMad(a,b,c)
  %FMad15 = call float @dx.op.tertiary.f32(i32 46, float %23, float %14, float %FMad16)  ; FMad(a,b,c)
  %38 = fadd fast float %FMad15, %24
  %39 = fmul fast float %26, %.i026
  %FMad13 = call float @dx.op.tertiary.f32(i32 46, float %27, float %10, float %39)  ; FMad(a,b,c)
  %FMad12 = call float @dx.op.tertiary.f32(i32 46, float %28, float %14, float %FMad13)  ; FMad(a,b,c)
  %40 = fadd fast float %FMad12, %29
  %41 = fmul fast float %31, %.i026
  %FMad10 = call float @dx.op.tertiary.f32(i32 46, float %32, float %10, float %41)  ; FMad(a,b,c)
  %FMad9 = call float @dx.op.tertiary.f32(i32 46, float %33, float %14, float %FMad10)  ; FMad(a,b,c)
  %42 = fadd fast float %FMad9, %34
  %.i028 = fdiv fast float %36, %42
  %.i129 = fdiv fast float %38, %42
  %.i2 = fdiv fast float %40, %42
  %43 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %HitShaderConstants, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %44 = extractvalue %dx.types.CBufRet.f32 %43, 0
  %45 = extractvalue %dx.types.CBufRet.f32 %43, 1
  %46 = extractvalue %dx.types.CBufRet.f32 %43, 2
  %47 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %6, i32 0, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %struct.RayPayload, %struct.RayPayload* %6, i32 0, i32 1
  store float 0x47EFFFFFE0000000, float* %48, align 4
  %49 = call %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32 160, %struct.RaytracingAccelerationStructure %2)  ; CreateHandleForLib(Resource)
  call void @dx.op.traceRay.struct.RayPayload(i32 157, %dx.types.Handle %49, i32 4, i32 -1, i32 0, i32 1, i32 0, float %.i028, float %.i129, float %.i2, float 0x3FB99999A0000000, float %44, float %45, float %46, float 0x47EFFFFFE0000000, %struct.RayPayload* nonnull %6)  ; TraceRay(AccelerationStructure,RayFlags,InstanceInclusionMask,RayContributionToHitGroupIndex,MultiplierForGeometryContributionToShaderIndex,MissShaderIndex,Origin_X,Origin_Y,Origin_Z,TMin,Direction_X,Direction_Y,Direction_Z,TMax,payload)
  %50 = load float, float* %48, align 4
  %51 = fcmp fast olt float %50, 0x47EFFFFFE0000000
  %52 = call %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32 160, %"class.RWTexture2D<vector<float, 4> >" %3)  ; CreateHandleForLib(Resource)
  br i1 %51, label %53, label %54

; <label>:53                                      ; preds = %0
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %52, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex1, i32 undef, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %55

; <label>:54                                      ; preds = %0
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %52, i32 %DispatchRaysIndex, i32 %DispatchRaysIndex1, i32 undef, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  br label %55

; <label>:55                                      ; preds = %54, %53
  ret void
}

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.dispatchRaysIndex.i32(i32, i8) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.textureLoad.f32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #1

; Function Attrs: nounwind
declare void @dx.op.traceRay.struct.RayPayload(i32, %dx.types.Handle, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, %struct.RayPayload*) #3

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #3

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.HitShaderConstants(i32, %HitShaderConstants) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.b1(i32, %b1) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.Texture2D<float>"(i32, %"class.Texture2D<float>") #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.struct.RaytracingAccelerationStructure(i32, %struct.RaytracingAccelerationStructure) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @"dx.op.createHandleForLib.class.RWTexture2D<vector<float, 4> >"(i32, %"class.RWTexture2D<vector<float, 4> >") #1

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="0" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.typeAnnotations = !{!15, !48}
!dx.entryPoints = !{!52, !54}

!0 = !{!"dxc 1.2"}
!1 = !{i32 1, i32 3}
!2 = !{i32 1, i32 4}
!3 = !{!"lib", i32 6, i32 3}
!4 = !{!5, !10, !12, null}
!5 = !{!6, !8}
!6 = !{i32 0, %struct.RaytracingAccelerationStructure* @"\01?g_accel@@3URaytracingAccelerationStructure@@A", !"g_accel", i32 0, i32 0, i32 1, i32 16, i32 0, !7}
!7 = !{i32 0, i32 4}
!8 = !{i32 1, %"class.Texture2D<float>"* @"\01?depth@@3V?$Texture2D@M@@A", !"depth", i32 0, i32 12, i32 1, i32 2, i32 0, !9}
!9 = !{i32 0, i32 9}
!10 = !{!11}
!11 = !{i32 0, %"class.RWTexture2D<vector<float, 4> >"* @"\01?g_screenOutput@@3V?$RWTexture2D@V?$vector@M$03@@@@A", !"g_screenOutput", i32 0, i32 2, i32 1, i32 2, i1 false, i1 false, i1 false, !9}
!12 = !{!13, !14}
!13 = !{i32 0, %HitShaderConstants* @HitShaderConstants, !"HitShaderConstants", i32 0, i32 0, i32 1, i32 136, null}
!14 = !{i32 1, %b1* @b1, !"b1", i32 0, i32 1, i32 1, i32 88, null}
!15 = !{i32 0, %struct.RaytracingAccelerationStructure undef, !16, %"class.RWTexture2D<vector<float, 4> >" undef, !18, %struct.DynamicCB undef, !20, %"class.Texture2D<float>" undef, !26, %"class.Texture2D<float>::mips_type" undef, !28, %struct.RayDesc undef, !30, %struct.RayPayload undef, !35, %HitShaderConstants undef, !38, %b1 undef, !46}
!16 = !{i32 4, !17}
!17 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 4}
!18 = !{i32 16, !19}
!19 = !{i32 6, !"h", i32 3, i32 0, i32 7, i32 9}
!20 = !{i32 88, !21, !23, !24, !25}
!21 = !{i32 6, !"cameraToWorld", i32 2, !22, i32 3, i32 0, i32 7, i32 9}
!22 = !{i32 4, i32 4, i32 1}
!23 = !{i32 6, !"worldCameraPosition", i32 3, i32 64, i32 7, i32 9}
!24 = !{i32 6, !"padding", i32 3, i32 76, i32 7, i32 5}
!25 = !{i32 6, !"resolution", i32 3, i32 80, i32 7, i32 9}
!26 = !{i32 8, !19, !27}
!27 = !{i32 6, !"mips", i32 3, i32 4}
!28 = !{i32 4, !29}
!29 = !{i32 6, !"handle", i32 3, i32 0, i32 7, i32 5}
!30 = !{i32 32, !31, !32, !33, !34}
!31 = !{i32 6, !"Origin", i32 3, i32 0, i32 7, i32 9}
!32 = !{i32 6, !"TMin", i32 3, i32 12, i32 7, i32 9}
!33 = !{i32 6, !"Direction", i32 3, i32 16, i32 7, i32 9}
!34 = !{i32 6, !"TMax", i32 3, i32 28, i32 7, i32 9}
!35 = !{i32 8, !36, !37}
!36 = !{i32 6, !"SkipShading", i32 3, i32 0, i32 7, i32 1}
!37 = !{i32 6, !"RayHitT", i32 3, i32 4, i32 7, i32 9}
!38 = !{i32 136, !39, !40, !41, !42, !43, !44, !45}
!39 = !{i32 6, !"SunDirection", i32 3, i32 0, i32 7, i32 9}
!40 = !{i32 6, !"SunColor", i32 3, i32 16, i32 7, i32 9}
!41 = !{i32 6, !"AmbientColor", i32 3, i32 32, i32 7, i32 9}
!42 = !{i32 6, !"ShadowTexelSize", i32 3, i32 48, i32 7, i32 9}
!43 = !{i32 6, !"ModelToShadow", i32 2, !22, i32 3, i32 64, i32 7, i32 9}
!44 = !{i32 6, !"IsReflection", i32 3, i32 128, i32 7, i32 5}
!45 = !{i32 6, !"UseShadowRays", i32 3, i32 132, i32 7, i32 5}
!46 = !{i32 88, !47}
!47 = !{i32 6, !"g_dynamic", i32 3, i32 0}
!48 = !{i32 1, void ()* @"\01?RayGen@@YAXXZ", !49}
!49 = !{!50}
!50 = !{i32 1, !51, !51}
!51 = !{}
!52 = !{null, !"", null, !4, !53}
!53 = !{i32 0, i64 65536}
!54 = !{void ()* @"\01?RayGen@@YAXXZ", !"\01?RayGen@@YAXXZ", null, null, !55}
!55 = !{i32 8, i32 7, i32 5, !56}
!56 = !{i32 0}

#endif

const unsigned char g_pRayGenerationShadowsLib[] = {
  0x44, 0x58, 0x42, 0x43, 0x8b, 0xf2, 0x42, 0x22, 0x8f, 0x7c, 0xc3, 0x01,
  0x23, 0xb1, 0x8e, 0x9d, 0x0a, 0xbc, 0x73, 0x0e, 0x01, 0x00, 0x00, 0x00,
  0x20, 0x12, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x52, 0x44, 0x41, 0x54, 0x78, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0x1c, 0x01, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x00, 0x48, 0x69, 0x74, 0x53, 0x68, 0x61, 0x64,
  0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x00,
  0x62, 0x31, 0x00, 0x67, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x00, 0x64,
  0x65, 0x70, 0x74, 0x68, 0x00, 0x67, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65,
  0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x00, 0x01, 0x3f, 0x52, 0x61,
  0x79, 0x47, 0x65, 0x6e, 0x40, 0x40, 0x59, 0x41, 0x58, 0x58, 0x5a, 0x00,
  0x52, 0x61, 0x79, 0x47, 0x65, 0x6e, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x63, 0x00, 0x07, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x5c, 0x10, 0x00, 0x00, 0x63, 0x00, 0x06, 0x00,
  0x17, 0x04, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x03, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x44, 0x10, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x0e, 0x04, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x1b, 0xc0, 0x23, 0xf8,
  0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x08, 0x72, 0x48, 0x87, 0x79, 0x08,
  0x07, 0x71, 0x60, 0x87, 0x72, 0x68, 0x03, 0x7a, 0x08, 0x87, 0x74, 0x60,
  0x87, 0x36, 0x18, 0x87, 0x70, 0x60, 0x07, 0x76, 0x98, 0x07, 0xc0, 0x1c,
  0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0x82, 0x1d, 0xca, 0x61, 0x1e,
  0xe6, 0xa1, 0x0d, 0xe0, 0x41, 0x1e, 0xca, 0x61, 0x1c, 0xd2, 0x61, 0x1e,
  0xca, 0xa1, 0x0d, 0xcc, 0x01, 0x1e, 0xda, 0x21, 0x1c, 0xc8, 0x01, 0x30,
  0x87, 0x70, 0x60, 0x87, 0x79, 0x28, 0x07, 0x80, 0x70, 0x87, 0x77, 0x68,
  0x03, 0x73, 0x90, 0x87, 0x70, 0x68, 0x87, 0x72, 0x68, 0x03, 0x78, 0x78,
  0x87, 0x74, 0x70, 0x07, 0x7a, 0x28, 0x07, 0x79, 0x68, 0x83, 0x72, 0x60,
  0x87, 0x74, 0x68, 0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c,
  0x00, 0xc2, 0x1d, 0xde, 0xa1, 0x0d, 0xd2, 0xc1, 0x1d, 0xcc, 0x61, 0x1e,
  0xda, 0xc0, 0x1c, 0xe0, 0xa1, 0x0d, 0xda, 0x21, 0x1c, 0xe8, 0x01, 0x1d,
  0x00, 0x73, 0x08, 0x07, 0x76, 0x98, 0x87, 0x72, 0x00, 0x08, 0x77, 0x78,
  0x87, 0x36, 0x70, 0x87, 0x70, 0x70, 0x87, 0x79, 0x68, 0x03, 0x73, 0x80,
  0x87, 0x36, 0x68, 0x87, 0x70, 0xa0, 0x07, 0x74, 0x00, 0xcc, 0x21, 0x1c,
  0xd8, 0x61, 0x1e, 0xca, 0x01, 0x18, 0xdc, 0xe1, 0x1d, 0xda, 0x40, 0x1e,
  0xca, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xce, 0xc1, 0x1d, 0xda, 0x60, 0x1e,
  0xe8, 0x21, 0x1c, 0xc6, 0x61, 0x1d, 0x00, 0x62, 0x1e, 0xe8, 0x21, 0x1c,
  0xc6, 0x61, 0x1d, 0xda, 0x00, 0x1e, 0xe4, 0xe1, 0x1d, 0xe8, 0xa1, 0x1c,
  0xc6, 0x81, 0x1e, 0xde, 0x41, 0x1e, 0xda, 0x40, 0x1c, 0xea, 0xc1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x0d, 0xe6, 0x21, 0x1d, 0xf4, 0xa1, 0x1c,
  0x00, 0x38, 0x00, 0x88, 0x7a, 0x70, 0x87, 0x79, 0x08, 0x07, 0x73, 0x28,
  0x87, 0x36, 0x30, 0x07, 0x78, 0x68, 0x83, 0x76, 0x08, 0x07, 0x7a, 0x40,
  0x07, 0xc0, 0x1c, 0xc2, 0x81, 0x1d, 0xe6, 0xa1, 0x1c, 0x00, 0xa2, 0x1e,
  0xe6, 0xa1, 0x1c, 0xda, 0x60, 0x1e, 0xde, 0xc1, 0x1c, 0xe8, 0xa1, 0x0d,
  0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0x01, 0x30, 0x87, 0x70, 0x60,
  0x87, 0x79, 0x28, 0x07, 0x60, 0x83, 0x21, 0xfc, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x48, 0x40, 0xb5, 0xc1, 0x18, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00,
  0x24, 0x80, 0xda, 0x40, 0x10, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0xd2,
  0x06, 0xa2, 0x80, 0x80, 0x33, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x86,
  0x09, 0x01, 0x31, 0x21, 0x28, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x7e, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xf4, 0xc1, 0x1c,
  0x01, 0x18, 0x9c, 0x19, 0x48, 0x53, 0x44, 0x09, 0x93, 0xbf, 0x02, 0xd8,
  0x14, 0x01, 0x02, 0xd2, 0x18, 0x9a, 0x20, 0x10, 0x0b, 0x11, 0x01, 0x13,
  0xe2, 0x34, 0xec, 0x14, 0x51, 0xc2, 0x44, 0x45, 0x04, 0x0a, 0x00, 0x0a,
  0x66, 0x00, 0x86, 0x11, 0x88, 0x61, 0x26, 0x32, 0x18, 0x07, 0x76, 0x08,
  0x87, 0x79, 0x98, 0x07, 0x37, 0x90, 0x85, 0x5b, 0xa0, 0x85, 0x72, 0xc0,
  0x07, 0x7a, 0xa8, 0x07, 0x79, 0x28, 0x07, 0x39, 0x20, 0x05, 0x3e, 0xb0,
  0x87, 0x72, 0x18, 0x07, 0x7a, 0x78, 0x07, 0x79, 0xe0, 0x03, 0x73, 0x60,
  0x87, 0x77, 0x08, 0x07, 0x7a, 0x60, 0x03, 0x30, 0xa0, 0x03, 0x3f, 0x00,
  0x03, 0x3f, 0x40, 0x01, 0x41, 0xc5, 0x4c, 0x61, 0x30, 0x0e, 0xec, 0x10,
  0x0e, 0xf3, 0x30, 0x0f, 0x6e, 0x40, 0x0b, 0xe5, 0x80, 0x0f, 0xf4, 0x50,
  0x0f, 0xf2, 0x50, 0x0e, 0x72, 0x40, 0x0a, 0x7c, 0x60, 0x0e, 0xec, 0xf0,
  0x0e, 0xe1, 0x40, 0x0f, 0x7e, 0xa0, 0x07, 0x7a, 0xd0, 0x0e, 0xe9, 0x00,
  0x0f, 0xf3, 0xf0, 0x0b, 0xf4, 0x90, 0x0f, 0xf0, 0x50, 0x0e, 0x28, 0x00,
  0x66, 0xb2, 0xc6, 0x81, 0x1d, 0xc2, 0x61, 0x1e, 0xe6, 0xc1, 0x0d, 0x68,
  0xa1, 0x1c, 0xf0, 0x81, 0x1e, 0xea, 0x41, 0x1e, 0xca, 0x41, 0x0e, 0x48,
  0x81, 0x0f, 0xcc, 0x81, 0x1d, 0xde, 0x21, 0x1c, 0xe8, 0xc1, 0x0f, 0x90,
  0x30, 0x1c, 0x84, 0x8c, 0x00, 0x94, 0x40, 0xa1, 0x65, 0x8e, 0x00, 0xa1,
  0xc6, 0x0c, 0x00, 0xe3, 0x24, 0xc0, 0x43, 0xd0, 0x30, 0xc2, 0x30, 0x24,
  0x01, 0x71, 0x96, 0xb0, 0x00, 0x92, 0xe4, 0x33, 0xc0, 0x14, 0x21, 0x97,
  0x5f, 0x2c, 0x0e, 0x30, 0xf9, 0xb8, 0x8f, 0xa3, 0x60, 0x3a, 0x29, 0x44,
  0x26, 0xf6, 0x00, 0x06, 0x22, 0xe2, 0x9c, 0x46, 0x9a, 0x80, 0x66, 0x92,
  0xd0, 0x21, 0x49, 0x12, 0x41, 0x01, 0x00, 0x55, 0xc3, 0x08, 0xc2, 0x70,
  0x90, 0x34, 0x45, 0x94, 0x30, 0xf9, 0x1d, 0xd6, 0x00, 0x0c, 0x22, 0x70,
  0x1b, 0x22, 0x28, 0x09, 0xb8, 0x4e, 0x08, 0x6a, 0x14, 0x60, 0x94, 0x1d,
  0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4,
  0xe4, 0x17, 0xb7, 0x8d, 0x88, 0x61, 0x18, 0x86, 0x7b, 0x86, 0xcb, 0x9f,
  0xb0, 0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85, 0x40, 0x81, 0x53, 0x88,
  0x0d, 0xe0, 0x00, 0xea, 0xca, 0x00, 0x00, 0x0d, 0x7d, 0x37, 0x0d, 0x97,
  0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0xad, 0xc4, 0xe4, 0x17, 0xb7,
  0x8d, 0x8a, 0x61, 0x18, 0x06, 0xa0, 0x28, 0x21, 0xc0, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x40, 0xe2, 0x45, 0xd2, 0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00,
  0x96, 0x02, 0xd8, 0xe2, 0x00, 0x03, 0x12, 0x80, 0x81, 0xc8, 0x12, 0x29,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0xc3, 0x30, 0x0c, 0xc3, 0x30, 0x94,
  0x64, 0x96, 0x45, 0x01, 0x38, 0x00, 0x00, 0x86, 0x61, 0x18, 0x1a, 0x42,
  0x4b, 0x31, 0x00, 0xc3, 0x30, 0x90, 0x5a, 0x06, 0x0e, 0xa8, 0x88, 0x2d,
  0x03, 0x07, 0x64, 0xe4, 0x96, 0x81, 0x03, 0x10, 0x82, 0xcb, 0xc0, 0x01,
  0x01, 0xc9, 0x65, 0xe0, 0x80, 0x82, 0xe8, 0x81, 0x80, 0x39, 0x82, 0xe0,
  0x1c, 0x69, 0x8a, 0x28, 0x61, 0xf2, 0x57, 0x00, 0xeb, 0x08, 0x49, 0x40,
  0x84, 0x34, 0x48, 0xc3, 0x1c, 0x01, 0x28, 0x10, 0x40, 0xc3, 0x14, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x3a, 0x0f,
  0xa4, 0x90, 0x21, 0x23, 0x45, 0x44, 0x00, 0x86, 0x01, 0x00, 0xb3, 0x0c,
  0x00, 0x98, 0x68, 0x00, 0xc0, 0x84, 0x42, 0x1b, 0x08, 0x58, 0x07, 0x00,
  0xc0, 0x3c, 0x00, 0x80, 0x21, 0xcf, 0x02, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0e, 0x08, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1f, 0x10, 0x00, 0x03,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc4, 0x00, 0x08,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x66,
  0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x1e, 0x34, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0x8f, 0x1a, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x90, 0x87, 0x0d, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x06, 0x40, 0x00, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81, 0x03, 0x20, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0xc8, 0x01,
  0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79,
  0xe8, 0x00, 0x08, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb2, 0x40, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x02,
  0x4a, 0xa0, 0x0c, 0x0a, 0xa1, 0x18, 0x46, 0x00, 0x0a, 0xa4, 0x30, 0x8a,
  0xa0, 0x24, 0x0a, 0x52, 0xa0, 0x60, 0x03, 0xca, 0xa1, 0x00, 0x03, 0x0a,
  0x33, 0xa0, 0x14, 0x0a, 0x34, 0xa0, 0x20, 0x0a, 0xa8, 0x70, 0x0a, 0xac,
  0x00, 0x05, 0x0a, 0x51, 0x80, 0xf2, 0x02, 0x04, 0x44, 0xa0, 0x7b, 0x04,
  0x80, 0x8e, 0x19, 0x00, 0x42, 0x66, 0x00, 0x08, 0x1a, 0x01, 0xa0, 0x6a,
  0x06, 0x80, 0xb0, 0x19, 0x00, 0xca, 0x66, 0x00, 0x88, 0x9c, 0x01, 0xa0,
  0x62, 0x06, 0x80, 0xf0, 0x19, 0x00, 0x0a, 0x66, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xf7, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0xc4, 0x83, 0x0c, 0x6f, 0x0c, 0x24, 0xc6, 0x45, 0x66,
  0x43, 0x10, 0x4c, 0x10, 0x00, 0x69, 0x82, 0x00, 0x4c, 0x1b, 0x84, 0x81,
  0x98, 0x20, 0x00, 0xd4, 0x06, 0x61, 0x30, 0x38, 0xb0, 0xa5, 0x89, 0x4d,
  0x10, 0x80, 0x6a, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01, 0xb0, 0x26, 0x08,
  0x02, 0xc0, 0xe3, 0xec, 0x2b, 0x6c, 0x6c, 0xac, 0x8c, 0x6d, 0x82, 0x00,
  0x5c, 0x1b, 0x84, 0xc5, 0xd8, 0x90, 0x2c, 0x4c, 0xb3, 0x2c, 0x83, 0xb3,
  0x3c, 0x13, 0x84, 0x44, 0x60, 0x41, 0x56, 0x06, 0x47, 0x87, 0x36, 0x41,
  0x00, 0xb0, 0x09, 0x02, 0x90, 0x4d, 0x10, 0x00, 0x6d, 0x83, 0xb0, 0x54,
  0x1b, 0x92, 0x21, 0x92, 0x96, 0x69, 0xa0, 0x16, 0x6b, 0x83, 0x00, 0x5d,
  0x13, 0x04, 0x23, 0xa0, 0x73, 0xf6, 0x35, 0x37, 0x26, 0x57, 0x56, 0xe6,
  0xf6, 0x54, 0x47, 0x07, 0x57, 0x47, 0x37, 0x41, 0xb8, 0x83, 0x34, 0xd8,
  0xb0, 0x2c, 0x99, 0xb6, 0x50, 0x03, 0xb5, 0x6d, 0x9b, 0xb5, 0x21, 0xe0,
  0x26, 0x08, 0x16, 0x41, 0x09, 0x29, 0x8d, 0x6e, 0x0a, 0x2d, 0x8c, 0xac,
  0x4c, 0x6e, 0xe8, 0xcd, 0x6d, 0x8e, 0x2e, 0xcc, 0x8d, 0x6e, 0x6e, 0x82,
  0x00, 0x6c, 0x1b, 0x90, 0xc5, 0xfb, 0x96, 0x65, 0x00, 0x03, 0x60, 0x82,
  0xa0, 0x15, 0x14, 0xc4, 0x62, 0x26, 0x08, 0x00, 0xb7, 0x01, 0x19, 0xc4,
  0x60, 0x0c, 0x96, 0x61, 0x20, 0x03, 0x60, 0x83, 0x10, 0x06, 0x65, 0xb0,
  0x81, 0xc0, 0x3a, 0x33, 0x00, 0x26, 0x08, 0xc1, 0x1c, 0x30, 0x40, 0x9b,
  0x20, 0x00, 0xdd, 0x06, 0x23, 0x49, 0x03, 0x62, 0x51, 0x03, 0x63, 0x83,
  0x60, 0xac, 0xc1, 0x04, 0xa1, 0x88, 0x83, 0x0d, 0x46, 0x92, 0x06, 0xc4,
  0xa2, 0x06, 0xd5, 0x06, 0xc1, 0x71, 0x83, 0x09, 0x02, 0xe6, 0x06, 0x6c,
  0xc6, 0xc2, 0xda, 0xca, 0xe4, 0xc2, 0xa8, 0xde, 0xae, 0xde, 0xe4, 0xd8,
  0xc8, 0x36, 0x0c, 0x86, 0x31, 0x6c, 0x40, 0x92, 0x38, 0xa0, 0xe4, 0x80,
  0x58, 0xd4, 0xa0, 0xe2, 0x74, 0xf7, 0x26, 0xc7, 0x46, 0x36, 0x14, 0xd6,
  0x56, 0x26, 0x17, 0x06, 0xf5, 0x36, 0x97, 0x46, 0x97, 0xf6, 0xe6, 0x36,
  0x41, 0x00, 0xbc, 0x0d, 0x46, 0x42, 0x07, 0x44, 0x1d, 0xa8, 0x41, 0xc5,
  0x03, 0x2e, 0x8c, 0x8c, 0x2c, 0xcd, 0xed, 0x6c, 0x82, 0x00, 0x7c, 0x13,
  0x04, 0x00, 0x0c, 0x36, 0x18, 0xc9, 0x1d, 0x10, 0x78, 0xa0, 0x06, 0x79,
  0x40, 0x45, 0xae, 0x6c, 0xee, 0x8d, 0xad, 0x8e, 0x2e, 0xed, 0xcd, 0x6d,
  0x82, 0x00, 0x84, 0xc1, 0x06, 0x23, 0xd9, 0x03, 0x82, 0x0f, 0xd4, 0xa0,
  0xda, 0x50, 0x90, 0xc1, 0x1c, 0xd8, 0x81, 0x1e, 0xf4, 0xc1, 0x04, 0x01,
  0x59, 0x83, 0x09, 0x02, 0x20, 0x06, 0x24, 0xda, 0xd2, 0xe0, 0xe6, 0x36,
  0x10, 0x49, 0x28, 0x10, 0xc6, 0x86, 0x01, 0x14, 0xdc, 0x40, 0x14, 0x26,
  0x08, 0x87, 0x1a, 0xd0, 0x40, 0x0b, 0x73, 0x23, 0x63, 0x2b, 0xdb, 0x60,
  0x24, 0xa5, 0x40, 0x2c, 0x6a, 0x90, 0x07, 0x1b, 0x04, 0xc3, 0x14, 0x26,
  0x08, 0x78, 0x20, 0x07, 0x13, 0x04, 0x60, 0x0c, 0x68, 0x3c, 0xc9, 0xa5,
  0x9d, 0xa5, 0xb9, 0x6d, 0x30, 0x12, 0x55, 0x20, 0x16, 0x35, 0xa8, 0x48,
  0x50, 0x35, 0xa5, 0xb9, 0x6d, 0x30, 0x12, 0x56, 0x20, 0x26, 0x35, 0xa8,
  0x98, 0x10, 0xa5, 0xc9, 0x95, 0x8d, 0xd1, 0xa5, 0xbd, 0xb9, 0x6d, 0x30,
  0x12, 0x57, 0x20, 0x1c, 0x35, 0xa8, 0x48, 0x50, 0x35, 0x85, 0xe1, 0x4d,
  0x10, 0x00, 0x32, 0xd8, 0x60, 0x24, 0xb0, 0x40, 0xc4, 0x82, 0x1a, 0x54,
  0x1b, 0x8a, 0x54, 0x58, 0x85, 0x56, 0x78, 0x05, 0x59, 0x98, 0x20, 0x90,
  0x01, 0x1c, 0x70, 0x99, 0x5a, 0x4b, 0x83, 0x9b, 0x42, 0x0b, 0x23, 0x4b,
  0x73, 0x3b, 0xdb, 0x60, 0x24, 0xb5, 0x40, 0x2c, 0x6a, 0x30, 0xf0, 0x90,
  0x0a, 0xcb, 0x43, 0x4a, 0xa3, 0xa3, 0xda, 0x60, 0x24, 0xb7, 0x40, 0x18,
  0x6a, 0x50, 0x6d, 0x18, 0x40, 0xc1, 0x16, 0x70, 0x61, 0x82, 0x50, 0xb5,
  0x01, 0x99, 0xa9, 0x3a, 0x37, 0xa2, 0x34, 0xb9, 0xb2, 0x31, 0xba, 0xb4,
  0x37, 0xb7, 0x0d, 0x46, 0xb2, 0x0b, 0xc4, 0xa2, 0x06, 0x15, 0x91, 0xa9,
  0x3a, 0xb7, 0xa1, 0x37, 0xb6, 0x37, 0xb9, 0x0d, 0x46, 0xd2, 0x0b, 0x84,
  0xa3, 0x06, 0x15, 0x99, 0xa0, 0x36, 0xb1, 0xb4, 0x32, 0x37, 0xba, 0xa1,
  0x37, 0xb6, 0x37, 0xb9, 0x0d, 0x46, 0xf2, 0x0b, 0x44, 0x2a, 0xa8, 0x41,
  0xc5, 0x67, 0x0a, 0x2d, 0x8c, 0xec, 0xed, 0x8e, 0xaa, 0x0c, 0xaf, 0x8c,
  0x6d, 0x2a, 0x4d, 0xaf, 0x6c, 0x82, 0x00, 0x94, 0xc1, 0x06, 0x23, 0x09,
  0x07, 0x42, 0x1c, 0xd4, 0xa0, 0x62, 0xd3, 0xf4, 0x46, 0x56, 0xc6, 0x46,
  0xf5, 0x36, 0x85, 0x16, 0x46, 0xf6, 0x76, 0xb7, 0x01, 0x49, 0xc8, 0x81,
  0x92, 0x03, 0xa2, 0x0e, 0xd4, 0xa0, 0x22, 0x93, 0x34, 0x27, 0x55, 0x66,
  0xc6, 0x56, 0x36, 0x46, 0x97, 0xf6, 0xe6, 0x36, 0x41, 0x00, 0xcc, 0x60,
  0x83, 0x91, 0x98, 0x03, 0x71, 0x0e, 0x6a, 0x90, 0x07, 0x6c, 0xaa, 0xe6,
  0xca, 0xa6, 0xd0, 0xc2, 0xc8, 0xde, 0xee, 0xa4, 0xc2, 0xf2, 0xe6, 0x26,
  0x08, 0xc0, 0x19, 0x6c, 0x30, 0x92, 0x74, 0x20, 0xd4, 0x41, 0x0d, 0xf2,
  0x60, 0x03, 0x02, 0x06, 0xbc, 0xe0, 0x0b, 0xe0, 0x30, 0x0e, 0xe5, 0x80,
  0x0e, 0xeb, 0x30, 0x41, 0xc8, 0xde, 0x80, 0xc9, 0xd9, 0x17, 0x59, 0x9e,
  0x5b, 0x58, 0x5b, 0xda, 0xd8, 0x06, 0x22, 0x71, 0x07, 0x62, 0xd9, 0x20,
  0x90, 0xc1, 0x3b, 0x6c, 0x98, 0x16, 0x34, 0x60, 0x83, 0x36, 0x78, 0x03,
  0x38, 0xf0, 0x83, 0x3f, 0x18, 0x05, 0x52, 0x38, 0x05, 0x54, 0x98, 0x05,
  0x5a, 0xc8, 0x05, 0x5d, 0x60, 0x87, 0x76, 0x80, 0x87, 0x09, 0x02, 0x63,
  0x6c, 0x00, 0x36, 0x0c, 0xc3, 0x3c, 0xcc, 0xc3, 0x86, 0x80, 0x1e, 0x36,
  0x0c, 0x83, 0x3c, 0xd4, 0x03, 0x81, 0x09, 0x42, 0x1e, 0xa0, 0xc1, 0x06,
  0x61, 0xc1, 0x87, 0x0d, 0x05, 0x70, 0x0f, 0xc0, 0x19, 0xe4, 0x03, 0x9f,
  0x80, 0x1f, 0xa9, 0xb0, 0xbc, 0xa3, 0x32, 0x37, 0x20, 0xa0, 0xac, 0x20,
  0x2c, 0x2c, 0xad, 0x0d, 0xc1, 0xb2, 0x81, 0x00, 0x05, 0x35, 0xc8, 0x03,
  0x7e, 0xd8, 0x50, 0xc8, 0xc3, 0x3e, 0x00, 0x40, 0x3f, 0x54, 0x61, 0x63,
  0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55,
  0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04,
  0x44, 0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29,
  0x81, 0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae,
  0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x90, 0x94, 0x21, 0xc3, 0x73, 0x91,
  0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x98, 0x41,
  0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c, 0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37,
  0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7, 0xb9, 0x29, 0x02, 0x3c, 0xd4, 0x43,
  0x1d, 0x32, 0x3c, 0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34,
  0x37, 0xba, 0xb9, 0x29, 0x42, 0x3e, 0xf4, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xcc, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x74, 0x60, 0x07, 0x37, 0x90, 0x87, 0x72, 0x98, 0x87, 0x77, 0xa8,
  0x07, 0x79, 0x18, 0x87, 0x72, 0x70, 0x83, 0x70, 0xa0, 0x07, 0x7a, 0x90,
  0x87, 0x74, 0x10, 0x87, 0x7a, 0xa0, 0x87, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x76, 0xb0, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25,
  0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x0c, 0xd2, 0x70, 0xf9, 0xce,
  0xe3, 0x4f, 0x44, 0x34, 0x21, 0x40, 0x84, 0xf9, 0xc5, 0x6d, 0xdb, 0x40,
  0xb4, 0x2c, 0x15, 0xe3, 0x1b, 0x8b, 0x13, 0x00, 0xcb, 0x2f, 0x4c, 0x4e,
  0x24, 0x19, 0xc4, 0x1f, 0x0c, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0,
  0x44, 0x84, 0x40, 0x33, 0x2c, 0xc4, 0xe7, 0x44, 0x25, 0x12, 0xf8, 0xd2,
  0x14, 0x51, 0xc2, 0xe4, 0xaf, 0x00, 0x36, 0x45, 0x80, 0x80, 0x34, 0x86,
  0x26, 0x08, 0xc4, 0x42, 0x44, 0xc0, 0x84, 0x38, 0x0d, 0x3b, 0x45, 0x94,
  0x30, 0x51, 0x11, 0x61, 0x0b, 0xd6, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0xc4,
  0x35, 0x51, 0x11, 0xc1, 0x4e, 0x4e, 0x44, 0xf8, 0xc5, 0x6d, 0x57, 0x40,
  0x1d, 0x04, 0x7e, 0xe7, 0xef, 0x7c, 0x2c, 0x2f, 0x97, 0xdd, 0xcf, 0x3a,
  0x1d, 0x5e, 0xa7, 0x03, 0x81, 0x33, 0xeb, 0x8f, 0x24, 0xbd, 0x52, 0xcb,
  0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0xd6, 0x1f, 0xc9, 0x5e, 0x1e,
  0xd3, 0xdf, 0x72, 0x60, 0x93, 0x04, 0x9b, 0x01, 0x81, 0x40, 0x60, 0xb0,
  0x04, 0xb6, 0xc0, 0x8f, 0x5c, 0x86, 0xd3, 0xd1, 0x40, 0xe0, 0xcc, 0xfa,
  0x23, 0x51, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11, 0x81, 0x4d, 0x20,
  0x30, 0x68, 0x0e, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c,
  0x44, 0x08, 0x34, 0xc3, 0x42, 0x7c, 0x4e, 0x54, 0x22, 0x81, 0x1f, 0xd4,
  0x46, 0x20, 0x85, 0xc8, 0xc4, 0x1e, 0xc0, 0x40, 0x44, 0x9c, 0xd3, 0x48,
  0x13, 0xd0, 0x4c, 0x52, 0x45, 0xf4, 0x01, 0x19, 0xef, 0x7a, 0xc3, 0x5d,
  0x63, 0x79, 0x39, 0x4c, 0x2f, 0x23, 0xc3, 0x6e, 0x32, 0xbb, 0x6c, 0x7c,
  0xcb, 0x99, 0x69, 0xb1, 0x6b, 0xcc, 0x0e, 0xcf, 0xe7, 0x2e, 0xe9, 0x95,
  0x5a, 0xc6, 0xd3, 0xeb, 0xf2, 0xb2, 0x8c, 0xc8, 0xb3, 0x97, 0xc7, 0xf4,
  0xb7, 0x9c, 0x67, 0x66, 0xbf, 0xc3, 0x74, 0x16, 0x88, 0xe6, 0x03, 0xf9,
  0xac, 0x61, 0x0d, 0x86, 0xcb, 0x77, 0x1e, 0x5f, 0x88, 0x08, 0x60, 0x22,
  0x42, 0xa0, 0x19, 0x16, 0xe2, 0x73, 0xa2, 0x12, 0x09, 0xfc, 0x10, 0x99,
  0xd8, 0x03, 0x18, 0x88, 0x88, 0x73, 0x1a, 0x69, 0x02, 0x9a, 0x49, 0xb2,
  0x02, 0x21, 0xa8, 0x2d, 0xa1, 0x1a, 0x2e, 0xdf, 0x79, 0xfc, 0x89, 0xb8,
  0x26, 0x2a, 0x22, 0x4a, 0x07, 0x18, 0xfc, 0xe2, 0xb6, 0x4d, 0x01, 0x0c,
  0x86, 0xcb, 0x77, 0x1e, 0x7f, 0x8a, 0x00, 0x81, 0x58, 0x01, 0xcc, 0x97,
  0xa6, 0x88, 0x12, 0x26, 0x7f, 0x05, 0xb0, 0x14, 0xc0, 0x16, 0x07, 0x18,
  0xca, 0xe0, 0x09, 0xfc, 0xa4, 0xe1, 0xfc, 0xb1, 0xec, 0x06, 0x02, 0xb3,
  0x41, 0x2c, 0x56, 0x5b, 0x00, 0x6f, 0x10, 0xf8, 0x9d, 0xbf, 0xe1, 0xf1,
  0xb8, 0xcc, 0x06, 0x02, 0x67, 0x55, 0x69, 0x38, 0x4f, 0x97, 0x87, 0xc7,
  0x69, 0xf7, 0x39, 0x38, 0x1e, 0x97, 0xd9, 0x65, 0x79, 0x98, 0x9e, 0x7e,
  0xbb, 0xa7, 0x74, 0x79, 0x7d, 0x4c, 0xaf, 0xcb, 0xcb, 0x40, 0x60, 0xd0,
  0x10, 0xb6, 0xe1, 0xf2, 0x9d, 0xc7, 0x1f, 0x10, 0xe9, 0x01, 0x26, 0xe1,
  0x58, 0x01, 0x4c, 0x12, 0x9b, 0x81, 0xb8, 0x7c, 0xe4, 0xb6, 0xeb, 0xe1,
  0x0d, 0xc8, 0x78, 0xd7, 0x1b, 0xee, 0x1a, 0xcb, 0xcb, 0x61, 0x7a, 0x19,
  0x19, 0x76, 0x93, 0xd9, 0x65, 0xe3, 0x5b, 0xce, 0x4c, 0x8b, 0x5d, 0x63,
  0x76, 0x78, 0x3e, 0x77, 0x51, 0xcb, 0x78, 0x7a, 0x5d, 0x5e, 0x96, 0x11,
  0x79, 0x66, 0xf6, 0x3b, 0x4c, 0xf7, 0x01, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xde, 0x00, 0x00, 0x00, 0x13, 0x04, 0x44, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x04, 0x14, 0x57, 0xd9, 0xcd, 0x00, 0x14, 0xb0,
  0x40, 0x89, 0x0a, 0x94, 0x61, 0x40, 0x11, 0x06, 0x94, 0xae, 0x40, 0x0d,
  0x50, 0x53, 0x02, 0x23, 0x00, 0xe5, 0x41, 0xc3, 0x18, 0x01, 0x08, 0x82,
  0x20, 0xfc, 0x8d, 0x11, 0x80, 0x20, 0x08, 0x82, 0x60, 0x30, 0x46, 0x00,
  0x82, 0x20, 0x88, 0xff, 0xc2, 0x18, 0x01, 0x08, 0x82, 0x20, 0x08, 0x0a,
  0x63, 0x04, 0xad, 0x39, 0xe7, 0xbc, 0x37, 0x02, 0x30, 0x46, 0xf0, 0xff,
  0xff, 0x7f, 0xff, 0xc1, 0x18, 0x01, 0x08, 0x82, 0x20, 0xfe, 0x01, 0x00,
  0x64, 0x0a, 0xc8, 0xa0, 0x54, 0x08, 0x06, 0xa5, 0x42, 0x31, 0xc8, 0x14,
  0xb2, 0x41, 0xa8, 0x50, 0x8d, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x70,
  0x83, 0x3f, 0xb0, 0x84, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0x60, 0x83,
  0x50, 0xb8, 0x84, 0x99, 0x08, 0x32, 0x00, 0x24, 0x52, 0x18, 0x31, 0x30,
  0x00, 0x10, 0x04, 0x83, 0x0f, 0x15, 0x30, 0x69, 0xc4, 0xc0, 0x00, 0x40,
  0x10, 0x0c, 0xbe, 0x54, 0xc8, 0xa8, 0x13, 0x86, 0x3a, 0x61, 0x28, 0x13,
  0x28, 0xf8, 0x98, 0x50, 0xc1, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0xba, 0x57, 0x08, 0x83, 0xc4, 0x0e, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41,
  0x08, 0xac, 0x10, 0xe8, 0x63, 0x85, 0x40, 0x1f, 0x13, 0x34, 0xf9, 0x98,
  0xb0, 0xc9, 0xc7, 0x84, 0x0d, 0x3e, 0x26, 0x70, 0xf0, 0x31, 0x2e, 0x88,
  0xcf, 0x31, 0x00, 0x1d, 0x03, 0xd0, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0xc0, 0xc1, 0x2c, 0xac, 0x81, 0x36, 0x62, 0xd0, 0x00, 0x20, 0x08, 0x06,
  0x62, 0xa0, 0x0b, 0x69, 0x10, 0xb4, 0xc2, 0x20, 0xb4, 0x41, 0x1b, 0xb4,
  0x41, 0x1b, 0x8c, 0x26, 0x04, 0xc0, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18,
  0x74, 0xbe, 0x00, 0x07, 0xd8, 0x2b, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82,
  0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00,
  0x08, 0x82, 0x41, 0x37, 0x0e, 0x75, 0xd0, 0xe1, 0xc2, 0x68, 0x42, 0x00,
  0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88,
  0xc1, 0x01, 0x80, 0x20, 0x18, 0x74, 0xe8, 0xa0, 0x07, 0x62, 0x60, 0x0b,
  0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a,
  0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xd0, 0xb5, 0xc3, 0x1f,
  0x9c, 0x41, 0x38, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x68, 0x02, 0x31, 0xd8, 0xc4, 0xc9, 0x67, 0xc4, 0x00, 0x01,
  0x40, 0x10, 0x0c, 0xd4, 0xc0, 0x1d, 0x4c, 0x61, 0xda, 0x82, 0x11, 0x03,
  0x04, 0x00, 0x41, 0x30, 0x50, 0x83, 0x77, 0x38, 0x85, 0xe9, 0x0a, 0x2c,
  0x98, 0xa0, 0x63, 0x12, 0x18, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0xd4, 0x40, 0x1e, 0x54, 0x41, 0xfa, 0x82, 0x11, 0x03, 0x04, 0x00,
  0x41, 0x30, 0x50, 0x83, 0x79, 0x58, 0x05, 0x69, 0x0b, 0x2c, 0x90, 0xa0,
  0x63, 0x11, 0x19, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xd4,
  0xc0, 0x1e, 0x5c, 0x21, 0x1a, 0x83, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0xd4, 0xe0, 0x1e, 0x5e, 0x21, 0xfa, 0x02, 0x0b, 0x22, 0xe8, 0x18,
  0x84, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x35, 0xd0,
  0x07, 0x59, 0x80, 0xce, 0x20, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03,
  0x35, 0xd8, 0x87, 0x59, 0x80, 0xc6, 0x20, 0xb0, 0x00, 0x82, 0x8e, 0x35,
  0x01, 0x7d, 0x4c, 0x11, 0xe8, 0x63, 0xc7, 0x40, 0x9f, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0xe8, 0x4a, 0xe2, 0x16, 0xfc, 0xc0, 0x1e, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x93, 0x43, 0x28,
  0xe8, 0x83, 0x3e, 0x0c, 0x1b, 0x10, 0xc1, 0x3e, 0x10, 0xc0, 0x26, 0x07,
  0x51, 0xd8, 0x87, 0x7f, 0x18, 0x36, 0x20, 0x02, 0x56, 0x18, 0x80, 0x11,
  0x03, 0x03, 0x00, 0x41, 0x30, 0x90, 0x03, 0x91, 0xd8, 0x85, 0x54, 0x18,
  0x31, 0xa0, 0x0a, 0x10, 0x04, 0x03, 0x33, 0x48, 0x09, 0x5c, 0x08, 0xfe,
  0xe1, 0x16, 0xfa, 0x21, 0x24, 0xfa, 0x41, 0x49, 0x90, 0x57, 0x30, 0x0a,
  0xa2, 0x15, 0x48, 0x81, 0x84, 0x61, 0x0c, 0x47, 0x04, 0xae, 0x40, 0x7c,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x40, 0x07, 0x24, 0xe1, 0x0b, 0xab,
  0x30, 0xcb, 0x10, 0x08, 0xc2, 0x88, 0x81, 0x03, 0x80, 0x20, 0x18, 0xa0,
  0xc1, 0x4a, 0xf4, 0x42, 0x60, 0x0a, 0xa5, 0x00, 0x0e, 0xb1, 0x10, 0x0b,
  0xb1, 0xf0, 0x0a, 0xb7, 0x30, 0x4b, 0x30, 0x8c, 0x18, 0x38, 0x00, 0x08,
  0x82, 0x01, 0x1a, 0xac, 0x44, 0x2f, 0x04, 0xa6, 0x50, 0x0a, 0xe0, 0xf0,
  0x0a, 0xaf, 0xf0, 0x0a, 0xaf, 0x70, 0x0b, 0xb3, 0x04, 0x03, 0x86, 0x03,
  0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0xb6, 0x67, 0x7c, 0x26,
  0x30, 0xd4, 0xbc, 0xe9, 0x19, 0x9f, 0x09, 0x0c, 0x75, 0x6f, 0x50, 0x51,
  0x87, 0x48, 0x0f, 0x30, 0x09, 0xc7, 0x0a, 0x60, 0x92, 0xd8, 0x0c, 0xc4,
  0x65, 0x54, 0x85, 0x8f, 0xd0, 0x36, 0x6d, 0x55, 0x85, 0x8f, 0xd4, 0x76,
  0x6d, 0x5a, 0x85, 0x8f, 0xd4, 0xf6, 0x6d, 0x59, 0x85, 0x8f, 0xd0, 0xb6,
  0x6d, 0x5c, 0x85, 0x8f, 0xd4, 0x76, 0x6e, 0x5b, 0x85, 0x8f, 0xd0, 0x36,
  0x6e, 0x5e, 0x85, 0x8f, 0xd4, 0xf6, 0x6e, 0x5d, 0x85, 0x8f, 0xd0, 0xb6,
  0x6e, 0x4d, 0x42, 0x50, 0x5b, 0x62, 0x40, 0xe1, 0x23, 0xb4, 0xcd, 0x9b,
  0x62, 0x40, 0xe1, 0x23, 0xb5, 0xdd, 0x5b, 0x94, 0xd4, 0x21, 0xd2, 0x03,
  0x4c, 0xc2, 0xb1, 0x02, 0x98, 0x24, 0x36, 0x03, 0x71, 0xd5, 0xe6, 0x24,
  0x85, 0xc8, 0xc4, 0x1e, 0xc0, 0x40, 0x44, 0x9c, 0xd3, 0x48, 0x13, 0xd0,
  0x4c, 0x92, 0x49, 0x0d, 0x3e, 0x42, 0xdb, 0xd4, 0xe0, 0x23, 0xb5, 0x2d,
  0x06, 0x0c, 0x3e, 0x62, 0xdb, 0xd8, 0xd2, 0x12, 0xd7, 0x44, 0x45, 0x44,
  0xe9, 0x00, 0x83, 0x1d, 0x06, 0x14, 0x9f, 0x09, 0x0c, 0xbd, 0x19, 0x06,
  0x18, 0x9f, 0x09, 0x0c, 0x35, 0x6d, 0x83, 0x01, 0xc6, 0x67, 0x02, 0x43,
  0x6d, 0x9b, 0x60, 0x80, 0xf1, 0x99, 0xc0, 0x50, 0xdf, 0xf6, 0x67, 0x7c,
  0x26, 0x30, 0xd4, 0xb9, 0xf9, 0x19, 0x9f, 0x09, 0x0c, 0xb5, 0x0e, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
